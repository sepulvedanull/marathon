{"version":3,"sources":["../server/index.js"],"names":["app","router","express","Router","debug","require","port","normalizePort","process","env","PORT","server","http","createServer","set","use","bodyParser","json","urlencoded","extended","static","path","join","__dirname","get","req","res","next","render","title","header","dataPath","params","year","race","fs","existsSync","status","send","data","sendFile","err","Error","locals","message","error","listen","on","onError","onListening","val","parseInt","isNaN","syscall","bind","code","console","exit","addr","address","log","module","exports"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,MAAM,wBAAZ;AACA;AACA,IAAMC,SAASC,kBAAQC,MAAR,EAAf;AACA,IAAMC,QAAQC,QAAQ,OAAR,EAAiB,cAAjB,CAAd;;AAEA,IAAMC,OAAOC,cAAcC,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,MAAlC,CAAb;AACA,IAAMC,SAASC,eAAKC,YAAL,CAAkBb,GAAlB,CAAf;;AAEAA,IAAIc,GAAJ,CAAQ,MAAR,EAAgBR,IAAhB;AACAN,IAAIc,GAAJ,CAAQ,aAAR,EAAuB,KAAvB;AACA;AACAd,IAAIe,GAAJ,CAAQ,sBAAO,KAAP,CAAR;AACAf,IAAIe,GAAJ,CAAQC,qBAAWC,IAAX,EAAR;AACAjB,IAAIe,GAAJ,CAAQC,qBAAWE,UAAX,CAAsB,EAAEC,UAAU,KAAZ,EAAtB,CAAR;AACAnB,IAAIe,GAAJ,CAAQ,6BAAR;AACAf,IAAIe,GAAJ,CAAQb,kBAAQkB,MAAR,CAAeC,eAAKC,IAAL,CAAUC,SAAV,EAAqB,OAArB,CAAf,CAAR;;AAEA;;;AAGA;AACAtB,OAAOuB,GAAP,CAAW,GAAX,EAAgB,UAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AACvCD,MAAIE,MAAJ,CAAW,OAAX,EAAoB,EAAEC,OAAO,SAAT,EAApB;AACD,CAFD;;AAIA7B,IAAIwB,GAAJ,CAAQ,kBAAR,EAA4B,UAACC,GAAD,EAAMC,GAAN,EAAc;AACxCA,MAAII,MAAJ,CAAW,6BAAX,EAA0C,GAA1C;AACAJ,MAAII,MAAJ,CAAW,8BAAX,EAA2C,gDAA3C;;AAEA,MAAMC,oCAAkCN,IAAIO,MAAJ,CAAWC,IAA7C,SACJR,IAAIO,MAAJ,CAAWE,IADP,UAAN;;AAIA,MAAI,CAACC,aAAGC,UAAH,CAAcL,QAAd,CAAL,EAA8B;AAC5BL,QAAIW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,0BAArB;AACD,GAFD,MAEO;AACL,QAAMC,OAAOlC,QAAQ0B,QAAR,CAAb;AACAL,QAAIW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,IAArB;AACD;AACF,CAdD;;AAiBAvC,IAAIwB,GAAJ,CAAQ,GAAR,EAAa,UAASC,GAAT,EAAcC,GAAd,EAAmB;AAC9BA,MAAIc,QAAJ,CAAanB,eAAKC,IAAL,CAAUC,YAAY,mBAAtB,CAAb;AACD,CAFD;;AAOA;AACAvB,IAAIe,GAAJ,CAAQ,UAASU,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC/B,MAAIc,MAAM,IAAIC,KAAJ,CAAU,WAAV,CAAV;AACAD,MAAIJ,MAAJ,GAAa,GAAb;AACAV,OAAKc,GAAL;AACD,CAJD;;AAMA;AACAzC,IAAIe,GAAJ,CAAQ,UAAS0B,GAAT,EAAchB,GAAd,EAAmBC,GAAnB,EAAwBC,IAAxB,EAA8B;AACpC;AACAD,MAAIiB,MAAJ,CAAWC,OAAX,GAAqBH,IAAIG,OAAzB;AACAlB,MAAIiB,MAAJ,CAAWE,KAAX,GAAmBpB,IAAIzB,GAAJ,CAAQwB,GAAR,CAAY,KAAZ,MAAuB,aAAvB,GAAuCiB,GAAvC,GAA6C,EAAhE;;AAEA;AACAf,MAAIW,MAAJ,CAAWI,IAAIJ,MAAJ,IAAc,GAAzB;AACAX,MAAIE,MAAJ,CAAW,OAAX;AACD,CARD;;AAWA;;;AAGAjB,OAAOmC,MAAP,CAAcxC,IAAd;AACAK,OAAOoC,EAAP,CAAU,OAAV,EAAmBC,OAAnB;AACArC,OAAOoC,EAAP,CAAU,WAAV,EAAuBE,WAAvB;;AAGA;;;AAGA,SAAS1C,aAAT,CAAuB2C,GAAvB,EAA4B;AAC1B,MAAM5C,OAAO6C,SAASD,GAAT,EAAc,EAAd,CAAb;;AAEA,MAAIE,MAAM9C,IAAN,CAAJ,EAAiB,OAAO4C,GAAP;AACjB,MAAI5C,QAAQ,CAAZ,EAAe,OAAOA,IAAP;;AAEf,SAAO,KAAP;AACD;;AAGD;;;AAGA,SAAS0C,OAAT,CAAiBH,KAAjB,EAAwB;AACtB,MAAIA,MAAMQ,OAAN,KAAkB,QAAtB,EAAgC,MAAMR,KAAN;;AAEhC,MAAIS,OAAO,OAAOhD,IAAP,KAAgB,QAAhB,GACP,UAAUA,IADH,GAEP,UAAUA,IAFd;;AAIA;AACA,UAAQuC,MAAMU,IAAd;AACE,SAAK,QAAL;AACEC,cAAQX,KAAR,CAAcS,OAAO,+BAArB;AACA9C,cAAQiD,IAAR,CAAa,CAAb;AACA;AACF,SAAK,YAAL;AACED,cAAQX,KAAR,CAAcS,OAAO,oBAArB;AACA9C,cAAQiD,IAAR,CAAa,CAAb;AACA;AACF;AACE,YAAMZ,KAAN;AAVJ;AAYD;;AAGD;;;AAGA,SAASI,WAAT,GAAuB;AACrB,MAAMS,OAAO/C,OAAOgD,OAAP,EAAb;AACA,MAAML,OAAO,OAAOI,IAAP,KAAgB,QAAhB,GACT,UAAUA,IADD,GAET,UAAUA,KAAKpD,IAFnB;AAGAF,QAAM,kBAAkBkD,IAAxB;AACAE,UAAQI,GAAR,6BAAsCF,KAAKpD,IAA3C;AACD;;AAGDuD,OAAOC,OAAP,GAAiB9D,GAAjB","file":"index.js","sourcesContent":["import path from 'path'\nimport favicon from 'serve-favicon'\nimport logger from 'morgan'\nimport cookieParser from 'cookie-parser'\nimport bodyParser from 'body-parser'\nimport express from 'express'\nimport fs from 'fs'\nimport http from 'http'\n\nconst app = express();\n// const index = require('./routes/index');\nconst router = express.Router();\nconst debug = require('debug')('myapp:server');\n\nconst port = normalizePort(process.env.PORT || '4000');\nconst server = http.createServer(app);\n\napp.set('port', port);\napp.set('view engine', 'pug');\n// app.use(favicon(path.join(__dirname, 'client', 'favicon.ico')));\napp.use(logger('dev'));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, 'build')));\n\n// app.use('/', index);\n\n\n/* GET home page. */\nrouter.get('/', function(req, res, next) {\n  res.render('index', { title: 'Express' });\n});\n\napp.get(\"/api/:year/:race\", (req, res) => {\n  res.header(\"Access-Control-Allow-Origin\", \"*\");\n  res.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\");\n\n  const dataPath = `./data-scraper/data/${req.params.year}/${\n    req.params.race\n    }.json`;\n\n  if (!fs.existsSync(dataPath)) {\n    res.status(422).send(\"Data file does not exist\");\n  } else {\n    const data = require(dataPath);\n    res.status(200).send(data);\n  }\n});\n\n\napp.get('/', function(req, res) {\n  res.sendFile(path.join(__dirname + '/build/index.html'));\n});\n\n\n\n\n// catch 404 and forward to error handler\napp.use(function(req, res, next) {\n  var err = new Error('Not Found');\n  err.status = 404;\n  next(err);\n});\n\n// error handler\napp.use(function(err, req, res, next) {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\n\n  // render the error page\n  res.status(err.status || 500);\n  res.render('error');\n});\n\n\n/**\n * Listen on provided port, on all network interfaces.\n */\nserver.listen(port);\nserver.on('error', onError);\nserver.on('listening', onListening);\n\n\n/**\n * Normalize a port into a number, string, or false.\n */\nfunction normalizePort(val) {\n  const port = parseInt(val, 10);\n\n  if (isNaN(port)) return val;\n  if (port >= 0) return port;\n\n  return false;\n}\n\n\n/**\n * Event listener for HTTP server \"error\" event.\n */\nfunction onError(error) {\n  if (error.syscall !== 'listen') throw error;\n\n  var bind = typeof port === 'string'\n    ? 'Pipe ' + port\n    : 'Port ' + port;\n\n  // handle specific listen errors with friendly messages\n  switch (error.code) {\n    case 'EACCES':\n      console.error(bind + ' requires elevated privileges');\n      process.exit(1);\n      break;\n    case 'EADDRINUSE':\n      console.error(bind + ' is already in use');\n      process.exit(1);\n      break;\n    default:\n      throw error;\n  }\n}\n\n\n/**\n * Event listener for HTTP server \"listening\" event.\n */\nfunction onListening() {\n  const addr = server.address();\n  const bind = typeof addr === 'string'\n    ? 'pipe ' + addr\n    : 'port ' + addr.port;\n  debug('Listening on ' + bind);\n  console.log(`server running on port ${addr.port}`);\n}\n\n\nmodule.exports = app;\n"]}