!function(t){var n={};function e(r){if(n[r])return n[r].exports;var i=n[r]={i:r,l:!1,exports:{}};return t[r].call(i.exports,i,i.exports,e),i.l=!0,i.exports}e.m=t,e.c=n,e.d=function(t,n,r){e.o(t,n)||Object.defineProperty(t,n,{enumerable:!0,get:r})},e.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},e.t=function(t,n){if(1&n&&(t=e(t)),8&n)return t;if(4&n&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(e.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&n&&"string"!=typeof t)for(var i in t)e.d(r,i,function(n){return t[n]}.bind(null,i));return r},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,"a",n),n},e.o=function(t,n){return Object.prototype.hasOwnProperty.call(t,n)},e.p="",e(e.s=0)}([function(t,n,e){"use strict";e.r(n);var r={},i={},a=34,o=10,u=13;function c(t){return new Function("d","return {"+t.map(function(t,n){return JSON.stringify(t)+": d["+n+"]"}).join(",")+"}")}var f=function(t){var n=new RegExp('["'+t+"\n\r]"),e=t.charCodeAt(0);function f(t,n){var c,f=[],s=t.length,l=0,h=0,d=s<=0,p=!1;function g(){if(d)return i;if(p)return p=!1,r;var n,c,f=l;if(t.charCodeAt(f)===a){for(;l++<s&&t.charCodeAt(l)!==a||t.charCodeAt(++l)===a;);return(n=l)>=s?d=!0:(c=t.charCodeAt(l++))===o?p=!0:c===u&&(p=!0,t.charCodeAt(l)===o&&++l),t.slice(f+1,n-1).replace(/""/g,'"')}for(;l<s;){if((c=t.charCodeAt(n=l++))===o)p=!0;else if(c===u)p=!0,t.charCodeAt(l)===o&&++l;else if(c!==e)continue;return t.slice(f,n)}return d=!0,t.slice(f,s)}for(t.charCodeAt(s-1)===o&&--s,t.charCodeAt(s-1)===u&&--s;(c=g())!==i;){for(var b=[];c!==r&&c!==i;)b.push(c),c=g();n&&null==(b=n(b,h++))||f.push(b)}return f}function s(n){return n.map(l).join(t)}function l(t){return null==t?"":n.test(t+="")?'"'+t.replace(/"/g,'""')+'"':t}return{parse:function(t,n){var e,r,i=f(t,function(t,i){if(e)return e(t,i-1);r=t,e=n?function(t,n){var e=c(t);return function(r,i){return n(e(r),i,t)}}(t,n):c(t)});return i.columns=r||[],i},parseRows:f,format:function(n,e){return null==e&&(e=function(t){var n=Object.create(null),e=[];return t.forEach(function(t){for(var r in t)r in n||e.push(n[r]=r)}),e}(n)),[e.map(l).join(t)].concat(n.map(function(n){return e.map(function(t){return l(n[t])}).join(t)})).join("\n")},formatRows:function(t){return t.map(s).join("\n")}}},s=f(","),l=s.parse,h=(s.parseRows,s.format,s.formatRows,f("\t")),d=h.parse;h.parseRows,h.format,h.formatRows;function p(t){if(!t.ok)throw new Error(t.status+" "+t.statusText);return t.text()}var g=function(t,n){return fetch(t,n).then(p)};function b(t){return function(n,e,r){return 2===arguments.length&&"function"==typeof e&&(r=e,e=void 0),g(n,e).then(function(n){return t(n,r)})}}var v=b(l);b(d);function y(t){return function(n,e){return g(n,e).then(function(n){return(new DOMParser).parseFromString(n,t)})}}y("application/xml"),y("text/html"),y("image/svg+xml");var m="http://www.w3.org/1999/xhtml",w={svg:"http://www.w3.org/2000/svg",xhtml:m,xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"},_=function(t){var n=t+="",e=n.indexOf(":");return e>=0&&"xmlns"!==(n=t.slice(0,e))&&(t=t.slice(e+1)),w.hasOwnProperty(n)?{space:w[n],local:t}:t};var M=function(t){var n=_(t);return(n.local?function(t){return function(){return this.ownerDocument.createElementNS(t.space,t.local)}}:function(t){return function(){var n=this.ownerDocument,e=this.namespaceURI;return e===m&&n.documentElement.namespaceURI===m?n.createElement(t):n.createElementNS(e,t)}})(n)};function x(){}var A=function(t){return null==t?x:function(){return this.querySelector(t)}};function T(){return[]}var C=function(t){return null==t?T:function(){return this.querySelectorAll(t)}},N=function(t){return function(){return this.matches(t)}};if("undefined"!=typeof document){var S=document.documentElement;if(!S.matches){var k=S.webkitMatchesSelector||S.msMatchesSelector||S.mozMatchesSelector||S.oMatchesSelector;N=function(t){return function(){return k.call(this,t)}}}}var U=N,D=function(t){return new Array(t.length)};function E(t,n){this.ownerDocument=t.ownerDocument,this.namespaceURI=t.namespaceURI,this._next=null,this._parent=t,this.__data__=n}E.prototype={constructor:E,appendChild:function(t){return this._parent.insertBefore(t,this._next)},insertBefore:function(t,n){return this._parent.insertBefore(t,n)},querySelector:function(t){return this._parent.querySelector(t)},querySelectorAll:function(t){return this._parent.querySelectorAll(t)}};var F="$";function Y(t,n,e,r,i,a){for(var o,u=0,c=n.length,f=a.length;u<f;++u)(o=n[u])?(o.__data__=a[u],r[u]=o):e[u]=new E(t,a[u]);for(;u<c;++u)(o=n[u])&&(i[u]=o)}function $(t,n,e,r,i,a,o){var u,c,f,s={},l=n.length,h=a.length,d=new Array(l);for(u=0;u<l;++u)(c=n[u])&&(d[u]=f=F+o.call(c,c.__data__,u,n),f in s?i[u]=c:s[f]=c);for(u=0;u<h;++u)(c=s[f=F+o.call(t,a[u],u,a)])?(r[u]=c,c.__data__=a[u],s[f]=null):e[u]=new E(t,a[u]);for(u=0;u<l;++u)(c=n[u])&&s[d[u]]===c&&(i[u]=c)}function P(t,n){return t<n?-1:t>n?1:t>=n?0:NaN}var j=function(t){return t.ownerDocument&&t.ownerDocument.defaultView||t.document&&t||t.defaultView};function H(t,n){return t.style.getPropertyValue(n)||j(t).getComputedStyle(t,null).getPropertyValue(n)}function O(t){return t.trim().split(/^|\s+/)}function L(t){return t.classList||new q(t)}function q(t){this._node=t,this._names=O(t.getAttribute("class")||"")}function z(t,n){for(var e=L(t),r=-1,i=n.length;++r<i;)e.add(n[r])}function X(t,n){for(var e=L(t),r=-1,i=n.length;++r<i;)e.remove(n[r])}q.prototype={add:function(t){this._names.indexOf(t)<0&&(this._names.push(t),this._node.setAttribute("class",this._names.join(" ")))},remove:function(t){var n=this._names.indexOf(t);n>=0&&(this._names.splice(n,1),this._node.setAttribute("class",this._names.join(" ")))},contains:function(t){return this._names.indexOf(t)>=0}};function I(){this.textContent=""}function R(){this.innerHTML=""}function V(){this.nextSibling&&this.parentNode.appendChild(this)}function Z(){this.previousSibling&&this.parentNode.insertBefore(this,this.parentNode.firstChild)}function B(){return null}function W(){var t=this.parentNode;t&&t.removeChild(this)}function Q(){return this.parentNode.insertBefore(this.cloneNode(!1),this.nextSibling)}function J(){return this.parentNode.insertBefore(this.cloneNode(!0),this.nextSibling)}var G={},K=null;"undefined"!=typeof document&&("onmouseenter"in document.documentElement||(G={mouseenter:"mouseover",mouseleave:"mouseout"}));function tt(t,n,e){return t=nt(t,n,e),function(n){var e=n.relatedTarget;e&&(e===this||8&e.compareDocumentPosition(this))||t.call(this,n)}}function nt(t,n,e){return function(r){var i=K;K=r;try{t.call(this,this.__data__,n,e)}finally{K=i}}}function et(t){return function(){var n=this.__on;if(n){for(var e,r=0,i=-1,a=n.length;r<a;++r)e=n[r],t.type&&e.type!==t.type||e.name!==t.name?n[++i]=e:this.removeEventListener(e.type,e.listener,e.capture);++i?n.length=i:delete this.__on}}}function rt(t,n,e){var r=G.hasOwnProperty(t.type)?tt:nt;return function(i,a,o){var u,c=this.__on,f=r(n,a,o);if(c)for(var s=0,l=c.length;s<l;++s)if((u=c[s]).type===t.type&&u.name===t.name)return this.removeEventListener(u.type,u.listener,u.capture),this.addEventListener(u.type,u.listener=f,u.capture=e),void(u.value=n);this.addEventListener(t.type,f,e),u={type:t.type,name:t.name,value:n,listener:f,capture:e},c?c.push(u):this.__on=[u]}}function it(t,n,e){var r=j(t),i=r.CustomEvent;"function"==typeof i?i=new i(n,e):(i=r.document.createEvent("Event"),e?(i.initEvent(n,e.bubbles,e.cancelable),i.detail=e.detail):i.initEvent(n,!1,!1)),t.dispatchEvent(i)}var at=[null];function ot(t,n){this._groups=t,this._parents=n}function ut(){return new ot([[document.documentElement]],at)}ot.prototype=ut.prototype={constructor:ot,select:function(t){"function"!=typeof t&&(t=A(t));for(var n=this._groups,e=n.length,r=new Array(e),i=0;i<e;++i)for(var a,o,u=n[i],c=u.length,f=r[i]=new Array(c),s=0;s<c;++s)(a=u[s])&&(o=t.call(a,a.__data__,s,u))&&("__data__"in a&&(o.__data__=a.__data__),f[s]=o);return new ot(r,this._parents)},selectAll:function(t){"function"!=typeof t&&(t=C(t));for(var n=this._groups,e=n.length,r=[],i=[],a=0;a<e;++a)for(var o,u=n[a],c=u.length,f=0;f<c;++f)(o=u[f])&&(r.push(t.call(o,o.__data__,f,u)),i.push(o));return new ot(r,i)},filter:function(t){"function"!=typeof t&&(t=U(t));for(var n=this._groups,e=n.length,r=new Array(e),i=0;i<e;++i)for(var a,o=n[i],u=o.length,c=r[i]=[],f=0;f<u;++f)(a=o[f])&&t.call(a,a.__data__,f,o)&&c.push(a);return new ot(r,this._parents)},data:function(t,n){if(!t)return d=new Array(this.size()),f=-1,this.each(function(t){d[++f]=t}),d;var e=n?$:Y,r=this._parents,i=this._groups;"function"!=typeof t&&(t=function(t){return function(){return t}}(t));for(var a=i.length,o=new Array(a),u=new Array(a),c=new Array(a),f=0;f<a;++f){var s=r[f],l=i[f],h=l.length,d=t.call(s,s&&s.__data__,f,r),p=d.length,g=u[f]=new Array(p),b=o[f]=new Array(p);e(s,l,g,b,c[f]=new Array(h),d,n);for(var v,y,m=0,w=0;m<p;++m)if(v=g[m]){for(m>=w&&(w=m+1);!(y=b[w])&&++w<p;);v._next=y||null}}return(o=new ot(o,r))._enter=u,o._exit=c,o},enter:function(){return new ot(this._enter||this._groups.map(D),this._parents)},exit:function(){return new ot(this._exit||this._groups.map(D),this._parents)},merge:function(t){for(var n=this._groups,e=t._groups,r=n.length,i=e.length,a=Math.min(r,i),o=new Array(r),u=0;u<a;++u)for(var c,f=n[u],s=e[u],l=f.length,h=o[u]=new Array(l),d=0;d<l;++d)(c=f[d]||s[d])&&(h[d]=c);for(;u<r;++u)o[u]=n[u];return new ot(o,this._parents)},order:function(){for(var t=this._groups,n=-1,e=t.length;++n<e;)for(var r,i=t[n],a=i.length-1,o=i[a];--a>=0;)(r=i[a])&&(o&&o!==r.nextSibling&&o.parentNode.insertBefore(r,o),o=r);return this},sort:function(t){function n(n,e){return n&&e?t(n.__data__,e.__data__):!n-!e}t||(t=P);for(var e=this._groups,r=e.length,i=new Array(r),a=0;a<r;++a){for(var o,u=e[a],c=u.length,f=i[a]=new Array(c),s=0;s<c;++s)(o=u[s])&&(f[s]=o);f.sort(n)}return new ot(i,this._parents).order()},call:function(){var t=arguments[0];return arguments[0]=this,t.apply(null,arguments),this},nodes:function(){var t=new Array(this.size()),n=-1;return this.each(function(){t[++n]=this}),t},node:function(){for(var t=this._groups,n=0,e=t.length;n<e;++n)for(var r=t[n],i=0,a=r.length;i<a;++i){var o=r[i];if(o)return o}return null},size:function(){var t=0;return this.each(function(){++t}),t},empty:function(){return!this.node()},each:function(t){for(var n=this._groups,e=0,r=n.length;e<r;++e)for(var i,a=n[e],o=0,u=a.length;o<u;++o)(i=a[o])&&t.call(i,i.__data__,o,a);return this},attr:function(t,n){var e=_(t);if(arguments.length<2){var r=this.node();return e.local?r.getAttributeNS(e.space,e.local):r.getAttribute(e)}return this.each((null==n?e.local?function(t){return function(){this.removeAttributeNS(t.space,t.local)}}:function(t){return function(){this.removeAttribute(t)}}:"function"==typeof n?e.local?function(t,n){return function(){var e=n.apply(this,arguments);null==e?this.removeAttributeNS(t.space,t.local):this.setAttributeNS(t.space,t.local,e)}}:function(t,n){return function(){var e=n.apply(this,arguments);null==e?this.removeAttribute(t):this.setAttribute(t,e)}}:e.local?function(t,n){return function(){this.setAttributeNS(t.space,t.local,n)}}:function(t,n){return function(){this.setAttribute(t,n)}})(e,n))},style:function(t,n,e){return arguments.length>1?this.each((null==n?function(t){return function(){this.style.removeProperty(t)}}:"function"==typeof n?function(t,n,e){return function(){var r=n.apply(this,arguments);null==r?this.style.removeProperty(t):this.style.setProperty(t,r,e)}}:function(t,n,e){return function(){this.style.setProperty(t,n,e)}})(t,n,null==e?"":e)):H(this.node(),t)},property:function(t,n){return arguments.length>1?this.each((null==n?function(t){return function(){delete this[t]}}:"function"==typeof n?function(t,n){return function(){var e=n.apply(this,arguments);null==e?delete this[t]:this[t]=e}}:function(t,n){return function(){this[t]=n}})(t,n)):this.node()[t]},classed:function(t,n){var e=O(t+"");if(arguments.length<2){for(var r=L(this.node()),i=-1,a=e.length;++i<a;)if(!r.contains(e[i]))return!1;return!0}return this.each(("function"==typeof n?function(t,n){return function(){(n.apply(this,arguments)?z:X)(this,t)}}:n?function(t){return function(){z(this,t)}}:function(t){return function(){X(this,t)}})(e,n))},text:function(t){return arguments.length?this.each(null==t?I:("function"==typeof t?function(t){return function(){var n=t.apply(this,arguments);this.textContent=null==n?"":n}}:function(t){return function(){this.textContent=t}})(t)):this.node().textContent},html:function(t){return arguments.length?this.each(null==t?R:("function"==typeof t?function(t){return function(){var n=t.apply(this,arguments);this.innerHTML=null==n?"":n}}:function(t){return function(){this.innerHTML=t}})(t)):this.node().innerHTML},raise:function(){return this.each(V)},lower:function(){return this.each(Z)},append:function(t){var n="function"==typeof t?t:M(t);return this.select(function(){return this.appendChild(n.apply(this,arguments))})},insert:function(t,n){var e="function"==typeof t?t:M(t),r=null==n?B:"function"==typeof n?n:A(n);return this.select(function(){return this.insertBefore(e.apply(this,arguments),r.apply(this,arguments)||null)})},remove:function(){return this.each(W)},clone:function(t){return this.select(t?J:Q)},datum:function(t){return arguments.length?this.property("__data__",t):this.node().__data__},on:function(t,n,e){var r,i,a=function(t){return t.trim().split(/^|\s+/).map(function(t){var n="",e=t.indexOf(".");return e>=0&&(n=t.slice(e+1),t=t.slice(0,e)),{type:t,name:n}})}(t+""),o=a.length;if(!(arguments.length<2)){for(u=n?rt:et,null==e&&(e=!1),r=0;r<o;++r)this.each(u(a[r],n,e));return this}var u=this.node().__on;if(u)for(var c,f=0,s=u.length;f<s;++f)for(r=0,c=u[f];r<o;++r)if((i=a[r]).type===c.type&&i.name===c.name)return c.value},dispatch:function(t,n){return this.each(("function"==typeof n?function(t,n){return function(){return it(this,t,n.apply(this,arguments))}}:function(t,n){return function(){return it(this,t,n)}})(t,n))}};var ct=ut,ft=function(t){return"string"==typeof t?new ot([[document.querySelector(t)]],[document.documentElement]):new ot([[t]],at)},st=0;function lt(){this._="@"+(++st).toString(36)}lt.prototype=function(){return new lt}.prototype={constructor:lt,get:function(t){for(var n=this._;!(n in t);)if(!(t=t.parentNode))return;return t[n]},set:function(t,n){return t[this._]=n},remove:function(t){return this._ in t&&delete t[this._]},toString:function(){return this._}};var ht=function(t,n){return t<n?-1:t>n?1:t>=n?0:NaN},dt=function(t){return 1===t.length&&(t=function(t){return function(n,e){return ht(t(n),e)}}(t)),{left:function(n,e,r,i){for(null==r&&(r=0),null==i&&(i=n.length);r<i;){var a=r+i>>>1;t(n[a],e)<0?r=a+1:i=a}return r},right:function(n,e,r,i){for(null==r&&(r=0),null==i&&(i=n.length);r<i;){var a=r+i>>>1;t(n[a],e)>0?i=a:r=a+1}return r}}};var pt=dt(ht),gt=pt.right,bt=(pt.left,gt);var vt=Array.prototype,yt=(vt.slice,vt.map,function(t,n,e){t=+t,n=+n,e=(i=arguments.length)<2?(n=t,t=0,1):i<3?1:+e;for(var r=-1,i=0|Math.max(0,Math.ceil((n-t)/e)),a=new Array(i);++r<i;)a[r]=t+r*e;return a}),mt=Math.sqrt(50),wt=Math.sqrt(10),_t=Math.sqrt(2),Mt=function(t,n,e){var r,i,a,o,u=-1;if(e=+e,(t=+t)===(n=+n)&&e>0)return[t];if((r=n<t)&&(i=t,t=n,n=i),0===(o=xt(t,n,e))||!isFinite(o))return[];if(o>0)for(t=Math.ceil(t/o),n=Math.floor(n/o),a=new Array(i=Math.ceil(n-t+1));++u<i;)a[u]=(t+u)*o;else for(t=Math.floor(t*o),n=Math.ceil(n*o),a=new Array(i=Math.ceil(t-n+1));++u<i;)a[u]=(t-u)/o;return r&&a.reverse(),a};function xt(t,n,e){var r=(n-t)/Math.max(0,e),i=Math.floor(Math.log(r)/Math.LN10),a=r/Math.pow(10,i);return i>=0?(a>=mt?10:a>=wt?5:a>=_t?2:1)*Math.pow(10,i):-Math.pow(10,-i)/(a>=mt?10:a>=wt?5:a>=_t?2:1)}function At(t,n,e){var r=Math.abs(n-t)/Math.max(0,e),i=Math.pow(10,Math.floor(Math.log(r)/Math.LN10)),a=r/i;return a>=mt?i*=10:a>=wt?i*=5:a>=_t&&(i*=2),n<t?-i:i}function Tt(){}function Ct(t,n){var e=new Tt;if(t instanceof Tt)t.each(function(t,n){e.set(n,t)});else if(Array.isArray(t)){var r,i=-1,a=t.length;if(null==n)for(;++i<a;)e.set(i,t[i]);else for(;++i<a;)e.set(n(r=t[i],i,t),r)}else if(t)for(var o in t)e.set(o,t[o]);return e}Tt.prototype=Ct.prototype={constructor:Tt,has:function(t){return"$"+t in this},get:function(t){return this["$"+t]},set:function(t,n){return this["$"+t]=n,this},remove:function(t){var n="$"+t;return n in this&&delete this[n]},clear:function(){for(var t in this)"$"===t[0]&&delete this[t]},keys:function(){var t=[];for(var n in this)"$"===n[0]&&t.push(n.slice(1));return t},values:function(){var t=[];for(var n in this)"$"===n[0]&&t.push(this[n]);return t},entries:function(){var t=[];for(var n in this)"$"===n[0]&&t.push({key:n.slice(1),value:this[n]});return t},size:function(){var t=0;for(var n in this)"$"===n[0]&&++t;return t},empty:function(){for(var t in this)if("$"===t[0])return!1;return!0},each:function(t){for(var n in this)"$"===n[0]&&t(this[n],n.slice(1),this)}};var Nt=Ct;function St(){}var kt=Nt.prototype;function Ut(t,n){var e=new St;if(t instanceof St)t.each(function(t){e.add(t)});else if(t){var r=-1,i=t.length;if(null==n)for(;++r<i;)e.add(t[r]);else for(;++r<i;)e.add(n(t[r],r,t))}return e}St.prototype=Ut.prototype={constructor:St,has:kt.has,add:function(t){return this["$"+(t+="")]=t,this},remove:kt.remove,clear:kt.clear,values:kt.keys,size:kt.size,empty:kt.empty,each:kt.each};var Dt=Array.prototype,Et=Dt.map,Ft=Dt.slice;var Yt=function(t,n,e){t.prototype=n.prototype=e,e.constructor=t};function $t(t,n){var e=Object.create(t.prototype);for(var r in n)e[r]=n[r];return e}function Pt(){}var jt="\\s*([+-]?\\d+)\\s*",Ht="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*",Ot="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*",Lt=/^#([0-9a-f]{3})$/,qt=/^#([0-9a-f]{6})$/,zt=new RegExp("^rgb\\("+[jt,jt,jt]+"\\)$"),Xt=new RegExp("^rgb\\("+[Ot,Ot,Ot]+"\\)$"),It=new RegExp("^rgba\\("+[jt,jt,jt,Ht]+"\\)$"),Rt=new RegExp("^rgba\\("+[Ot,Ot,Ot,Ht]+"\\)$"),Vt=new RegExp("^hsl\\("+[Ht,Ot,Ot]+"\\)$"),Zt=new RegExp("^hsla\\("+[Ht,Ot,Ot,Ht]+"\\)$"),Bt={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};function Wt(t){var n;return t=(t+"").trim().toLowerCase(),(n=Lt.exec(t))?new tn((n=parseInt(n[1],16))>>8&15|n>>4&240,n>>4&15|240&n,(15&n)<<4|15&n,1):(n=qt.exec(t))?Qt(parseInt(n[1],16)):(n=zt.exec(t))?new tn(n[1],n[2],n[3],1):(n=Xt.exec(t))?new tn(255*n[1]/100,255*n[2]/100,255*n[3]/100,1):(n=It.exec(t))?Jt(n[1],n[2],n[3],n[4]):(n=Rt.exec(t))?Jt(255*n[1]/100,255*n[2]/100,255*n[3]/100,n[4]):(n=Vt.exec(t))?nn(n[1],n[2]/100,n[3]/100,1):(n=Zt.exec(t))?nn(n[1],n[2]/100,n[3]/100,n[4]):Bt.hasOwnProperty(t)?Qt(Bt[t]):"transparent"===t?new tn(NaN,NaN,NaN,0):null}function Qt(t){return new tn(t>>16&255,t>>8&255,255&t,1)}function Jt(t,n,e,r){return r<=0&&(t=n=e=NaN),new tn(t,n,e,r)}function Gt(t){return t instanceof Pt||(t=Wt(t)),t?new tn((t=t.rgb()).r,t.g,t.b,t.opacity):new tn}function Kt(t,n,e,r){return 1===arguments.length?Gt(t):new tn(t,n,e,null==r?1:r)}function tn(t,n,e,r){this.r=+t,this.g=+n,this.b=+e,this.opacity=+r}function nn(t,n,e,r){return r<=0?t=n=e=NaN:e<=0||e>=1?t=n=NaN:n<=0&&(t=NaN),new rn(t,n,e,r)}function en(t,n,e,r){return 1===arguments.length?function(t){if(t instanceof rn)return new rn(t.h,t.s,t.l,t.opacity);if(t instanceof Pt||(t=Wt(t)),!t)return new rn;if(t instanceof rn)return t;var n=(t=t.rgb()).r/255,e=t.g/255,r=t.b/255,i=Math.min(n,e,r),a=Math.max(n,e,r),o=NaN,u=a-i,c=(a+i)/2;return u?(o=n===a?(e-r)/u+6*(e<r):e===a?(r-n)/u+2:(n-e)/u+4,u/=c<.5?a+i:2-a-i,o*=60):u=c>0&&c<1?0:o,new rn(o,u,c,t.opacity)}(t):new rn(t,n,e,null==r?1:r)}function rn(t,n,e,r){this.h=+t,this.s=+n,this.l=+e,this.opacity=+r}function an(t,n,e){return 255*(t<60?n+(e-n)*t/60:t<180?e:t<240?n+(e-n)*(240-t)/60:n)}Yt(Pt,Wt,{displayable:function(){return this.rgb().displayable()},toString:function(){return this.rgb()+""}}),Yt(tn,Kt,$t(Pt,{brighter:function(t){return t=null==t?1/.7:Math.pow(1/.7,t),new tn(this.r*t,this.g*t,this.b*t,this.opacity)},darker:function(t){return t=null==t?.7:Math.pow(.7,t),new tn(this.r*t,this.g*t,this.b*t,this.opacity)},rgb:function(){return this},displayable:function(){return 0<=this.r&&this.r<=255&&0<=this.g&&this.g<=255&&0<=this.b&&this.b<=255&&0<=this.opacity&&this.opacity<=1},toString:function(){var t=this.opacity;return(1===(t=isNaN(t)?1:Math.max(0,Math.min(1,t)))?"rgb(":"rgba(")+Math.max(0,Math.min(255,Math.round(this.r)||0))+", "+Math.max(0,Math.min(255,Math.round(this.g)||0))+", "+Math.max(0,Math.min(255,Math.round(this.b)||0))+(1===t?")":", "+t+")")}})),Yt(rn,en,$t(Pt,{brighter:function(t){return t=null==t?1/.7:Math.pow(1/.7,t),new rn(this.h,this.s,this.l*t,this.opacity)},darker:function(t){return t=null==t?.7:Math.pow(.7,t),new rn(this.h,this.s,this.l*t,this.opacity)},rgb:function(){var t=this.h%360+360*(this.h<0),n=isNaN(t)||isNaN(this.s)?0:this.s,e=this.l,r=e+(e<.5?e:1-e)*n,i=2*e-r;return new tn(an(t>=240?t-240:t+120,i,r),an(t,i,r),an(t<120?t+240:t-120,i,r),this.opacity)},displayable:function(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1}}));var on=Math.PI/180,un=180/Math.PI,cn=.95047,fn=1,sn=1.08883,ln=4/29,hn=6/29,dn=3*hn*hn,pn=hn*hn*hn;function gn(t){if(t instanceof vn)return new vn(t.l,t.a,t.b,t.opacity);if(t instanceof xn){var n=t.h*on;return new vn(t.l,Math.cos(n)*t.c,Math.sin(n)*t.c,t.opacity)}t instanceof tn||(t=Gt(t));var e=_n(t.r),r=_n(t.g),i=_n(t.b),a=yn((.4124564*e+.3575761*r+.1804375*i)/cn),o=yn((.2126729*e+.7151522*r+.072175*i)/fn);return new vn(116*o-16,500*(a-o),200*(o-yn((.0193339*e+.119192*r+.9503041*i)/sn)),t.opacity)}function bn(t,n,e,r){return 1===arguments.length?gn(t):new vn(t,n,e,null==r?1:r)}function vn(t,n,e,r){this.l=+t,this.a=+n,this.b=+e,this.opacity=+r}function yn(t){return t>pn?Math.pow(t,1/3):t/dn+ln}function mn(t){return t>hn?t*t*t:dn*(t-ln)}function wn(t){return 255*(t<=.0031308?12.92*t:1.055*Math.pow(t,1/2.4)-.055)}function _n(t){return(t/=255)<=.04045?t/12.92:Math.pow((t+.055)/1.055,2.4)}function Mn(t,n,e,r){return 1===arguments.length?function(t){if(t instanceof xn)return new xn(t.h,t.c,t.l,t.opacity);t instanceof vn||(t=gn(t));var n=Math.atan2(t.b,t.a)*un;return new xn(n<0?n+360:n,Math.sqrt(t.a*t.a+t.b*t.b),t.l,t.opacity)}(t):new xn(t,n,e,null==r?1:r)}function xn(t,n,e,r){this.h=+t,this.c=+n,this.l=+e,this.opacity=+r}Yt(vn,bn,$t(Pt,{brighter:function(t){return new vn(this.l+18*(null==t?1:t),this.a,this.b,this.opacity)},darker:function(t){return new vn(this.l-18*(null==t?1:t),this.a,this.b,this.opacity)},rgb:function(){var t=(this.l+16)/116,n=isNaN(this.a)?t:t+this.a/500,e=isNaN(this.b)?t:t-this.b/200;return t=fn*mn(t),new tn(wn(3.2404542*(n=cn*mn(n))-1.5371385*t-.4985314*(e=sn*mn(e))),wn(-.969266*n+1.8760108*t+.041556*e),wn(.0556434*n-.2040259*t+1.0572252*e),this.opacity)}})),Yt(xn,Mn,$t(Pt,{brighter:function(t){return new xn(this.h,this.c,this.l+18*(null==t?1:t),this.opacity)},darker:function(t){return new xn(this.h,this.c,this.l-18*(null==t?1:t),this.opacity)},rgb:function(){return gn(this).rgb()}}));var An=-.14861,Tn=1.78277,Cn=-.29227,Nn=-.90649,Sn=1.97294,kn=Sn*Nn,Un=Sn*Tn,Dn=Tn*Cn-Nn*An;function En(t,n,e,r){return 1===arguments.length?function(t){if(t instanceof Fn)return new Fn(t.h,t.s,t.l,t.opacity);t instanceof tn||(t=Gt(t));var n=t.r/255,e=t.g/255,r=t.b/255,i=(Dn*r+kn*n-Un*e)/(Dn+kn-Un),a=r-i,o=(Sn*(e-i)-Cn*a)/Nn,u=Math.sqrt(o*o+a*a)/(Sn*i*(1-i)),c=u?Math.atan2(o,a)*un-120:NaN;return new Fn(c<0?c+360:c,u,i,t.opacity)}(t):new Fn(t,n,e,null==r?1:r)}function Fn(t,n,e,r){this.h=+t,this.s=+n,this.l=+e,this.opacity=+r}function Yn(t,n,e,r,i){var a=t*t,o=a*t;return((1-3*t+3*a-o)*n+(4-6*a+3*o)*e+(1+3*t+3*a-3*o)*r+o*i)/6}Yt(Fn,En,$t(Pt,{brighter:function(t){return t=null==t?1/.7:Math.pow(1/.7,t),new Fn(this.h,this.s,this.l*t,this.opacity)},darker:function(t){return t=null==t?.7:Math.pow(.7,t),new Fn(this.h,this.s,this.l*t,this.opacity)},rgb:function(){var t=isNaN(this.h)?0:(this.h+120)*on,n=+this.l,e=isNaN(this.s)?0:this.s*n*(1-n),r=Math.cos(t),i=Math.sin(t);return new tn(255*(n+e*(An*r+Tn*i)),255*(n+e*(Cn*r+Nn*i)),255*(n+e*(Sn*r)),this.opacity)}}));var $n=function(t){return function(){return t}};function Pn(t,n){return function(e){return t+e*n}}function jn(t,n){var e=n-t;return e?Pn(t,e>180||e<-180?e-360*Math.round(e/360):e):$n(isNaN(t)?n:t)}function Hn(t){return 1==(t=+t)?On:function(n,e){return e-n?function(t,n,e){return t=Math.pow(t,e),n=Math.pow(n,e)-t,e=1/e,function(r){return Math.pow(t+r*n,e)}}(n,e,t):$n(isNaN(n)?e:n)}}function On(t,n){var e=n-t;return e?Pn(t,e):$n(isNaN(t)?n:t)}var Ln=function t(n){var e=Hn(n);function r(t,n){var r=e((t=Kt(t)).r,(n=Kt(n)).r),i=e(t.g,n.g),a=e(t.b,n.b),o=On(t.opacity,n.opacity);return function(n){return t.r=r(n),t.g=i(n),t.b=a(n),t.opacity=o(n),t+""}}return r.gamma=t,r}(1);function qn(t){return function(n){var e,r,i=n.length,a=new Array(i),o=new Array(i),u=new Array(i);for(e=0;e<i;++e)r=Kt(n[e]),a[e]=r.r||0,o[e]=r.g||0,u[e]=r.b||0;return a=t(a),o=t(o),u=t(u),r.opacity=1,function(t){return r.r=a(t),r.g=o(t),r.b=u(t),r+""}}}qn(function(t){var n=t.length-1;return function(e){var r=e<=0?e=0:e>=1?(e=1,n-1):Math.floor(e*n),i=t[r],a=t[r+1],o=r>0?t[r-1]:2*i-a,u=r<n-1?t[r+2]:2*a-i;return Yn((e-r/n)*n,o,i,a,u)}}),qn(function(t){var n=t.length;return function(e){var r=Math.floor(((e%=1)<0?++e:e)*n),i=t[(r+n-1)%n],a=t[r%n],o=t[(r+1)%n],u=t[(r+2)%n];return Yn((e-r/n)*n,i,a,o,u)}});var zn=function(t,n){return n-=t=+t,function(e){return t+n*e}},Xn=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,In=new RegExp(Xn.source,"g");var Rn,Vn,Zn,Bn,Wn=function(t,n){var e,r,i,a=Xn.lastIndex=In.lastIndex=0,o=-1,u=[],c=[];for(t+="",n+="";(e=Xn.exec(t))&&(r=In.exec(n));)(i=r.index)>a&&(i=n.slice(a,i),u[o]?u[o]+=i:u[++o]=i),(e=e[0])===(r=r[0])?u[o]?u[o]+=r:u[++o]=r:(u[++o]=null,c.push({i:o,x:zn(e,r)})),a=In.lastIndex;return a<n.length&&(i=n.slice(a),u[o]?u[o]+=i:u[++o]=i),u.length<2?c[0]?function(t){return function(n){return t(n)+""}}(c[0].x):function(t){return function(){return t}}(n):(n=c.length,function(t){for(var e,r=0;r<n;++r)u[(e=c[r]).i]=e.x(t);return u.join("")})},Qn=function(t,n){var e,r=typeof n;return null==n||"boolean"===r?$n(n):("number"===r?zn:"string"===r?(e=Wt(n))?(n=e,Ln):Wn:n instanceof Wt?Ln:n instanceof Date?function(t,n){var e=new Date;return n-=t=+t,function(r){return e.setTime(t+n*r),e}}:Array.isArray(n)?function(t,n){var e,r=n?n.length:0,i=t?Math.min(r,t.length):0,a=new Array(i),o=new Array(r);for(e=0;e<i;++e)a[e]=Qn(t[e],n[e]);for(;e<r;++e)o[e]=n[e];return function(t){for(e=0;e<i;++e)o[e]=a[e](t);return o}}:"function"!=typeof n.valueOf&&"function"!=typeof n.toString||isNaN(n)?function(t,n){var e,r={},i={};for(e in null!==t&&"object"==typeof t||(t={}),null!==n&&"object"==typeof n||(n={}),n)e in t?r[e]=Qn(t[e],n[e]):i[e]=n[e];return function(t){for(e in r)i[e]=r[e](t);return i}}:zn)(t,n)},Jn=function(t,n){return n-=t=+t,function(e){return Math.round(t+n*e)}},Gn=180/Math.PI,Kn={translateX:0,translateY:0,rotate:0,skewX:0,scaleX:1,scaleY:1},te=function(t,n,e,r,i,a){var o,u,c;return(o=Math.sqrt(t*t+n*n))&&(t/=o,n/=o),(c=t*e+n*r)&&(e-=t*c,r-=n*c),(u=Math.sqrt(e*e+r*r))&&(e/=u,r/=u,c/=u),t*r<n*e&&(t=-t,n=-n,c=-c,o=-o),{translateX:i,translateY:a,rotate:Math.atan2(n,t)*Gn,skewX:Math.atan(c)*Gn,scaleX:o,scaleY:u}};function ne(t,n,e,r){function i(t){return t.length?t.pop()+" ":""}return function(a,o){var u=[],c=[];return a=t(a),o=t(o),function(t,r,i,a,o,u){if(t!==i||r!==a){var c=o.push("translate(",null,n,null,e);u.push({i:c-4,x:zn(t,i)},{i:c-2,x:zn(r,a)})}else(i||a)&&o.push("translate("+i+n+a+e)}(a.translateX,a.translateY,o.translateX,o.translateY,u,c),function(t,n,e,a){t!==n?(t-n>180?n+=360:n-t>180&&(t+=360),a.push({i:e.push(i(e)+"rotate(",null,r)-2,x:zn(t,n)})):n&&e.push(i(e)+"rotate("+n+r)}(a.rotate,o.rotate,u,c),function(t,n,e,a){t!==n?a.push({i:e.push(i(e)+"skewX(",null,r)-2,x:zn(t,n)}):n&&e.push(i(e)+"skewX("+n+r)}(a.skewX,o.skewX,u,c),function(t,n,e,r,a,o){if(t!==e||n!==r){var u=a.push(i(a)+"scale(",null,",",null,")");o.push({i:u-4,x:zn(t,e)},{i:u-2,x:zn(n,r)})}else 1===e&&1===r||a.push(i(a)+"scale("+e+","+r+")")}(a.scaleX,a.scaleY,o.scaleX,o.scaleY,u,c),a=o=null,function(t){for(var n,e=-1,r=c.length;++e<r;)u[(n=c[e]).i]=n.x(t);return u.join("")}}}var ee=ne(function(t){return"none"===t?Kn:(Rn||(Rn=document.createElement("DIV"),Vn=document.documentElement,Zn=document.defaultView),Rn.style.transform=t,t=Zn.getComputedStyle(Vn.appendChild(Rn),null).getPropertyValue("transform"),Vn.removeChild(Rn),t=t.slice(7,-1).split(","),te(+t[0],+t[1],+t[2],+t[3],+t[4],+t[5]))},"px, ","px)","deg)"),re=ne(function(t){return null==t?Kn:(Bn||(Bn=document.createElementNS("http://www.w3.org/2000/svg","g")),Bn.setAttribute("transform",t),(t=Bn.transform.baseVal.consolidate())?(t=t.matrix,te(t.a,t.b,t.c,t.d,t.e,t.f)):Kn)},", ",")",")");Math.SQRT2;function ie(t){return function(n,e){var r=t((n=en(n)).h,(e=en(e)).h),i=On(n.s,e.s),a=On(n.l,e.l),o=On(n.opacity,e.opacity);return function(t){return n.h=r(t),n.s=i(t),n.l=a(t),n.opacity=o(t),n+""}}}ie(jn),ie(On);function ae(t){return function(n,e){var r=t((n=Mn(n)).h,(e=Mn(e)).h),i=On(n.c,e.c),a=On(n.l,e.l),o=On(n.opacity,e.opacity);return function(t){return n.h=r(t),n.c=i(t),n.l=a(t),n.opacity=o(t),n+""}}}ae(jn),ae(On);function oe(t){return function n(e){function r(n,r){var i=t((n=En(n)).h,(r=En(r)).h),a=On(n.s,r.s),o=On(n.l,r.l),u=On(n.opacity,r.opacity);return function(t){return n.h=i(t),n.s=a(t),n.l=o(Math.pow(t,e)),n.opacity=u(t),n+""}}return e=+e,r.gamma=n,r}(1)}oe(jn);var ue=oe(On),ce=function(t){return function(){return t}},fe=function(t){return+t},se=[0,1];function le(t,n){return(n-=t=+t)?function(e){return(e-t)/n}:ce(n)}function he(t,n,e,r){var i=t[0],a=t[1],o=n[0],u=n[1];return a<i?(i=e(a,i),o=r(u,o)):(i=e(i,a),o=r(o,u)),function(t){return o(i(t))}}function de(t,n,e,r){var i=Math.min(t.length,n.length)-1,a=new Array(i),o=new Array(i),u=-1;for(t[i]<t[0]&&(t=t.slice().reverse(),n=n.slice().reverse());++u<i;)a[u]=e(t[u],t[u+1]),o[u]=r(n[u],n[u+1]);return function(n){var e=bt(t,n,1,i)-1;return o[e](a[e](n))}}function pe(t,n){return n.domain(t.domain()).range(t.range()).interpolate(t.interpolate()).clamp(t.clamp())}function ge(t,n){var e,r,i,a=se,o=se,u=Qn,c=!1;function f(){return e=Math.min(a.length,o.length)>2?de:he,r=i=null,s}function s(n){return(r||(r=e(a,o,c?function(t){return function(n,e){var r=t(n=+n,e=+e);return function(t){return t<=n?0:t>=e?1:r(t)}}}(t):t,u)))(+n)}return s.invert=function(t){return(i||(i=e(o,a,le,c?function(t){return function(n,e){var r=t(n=+n,e=+e);return function(t){return t<=0?n:t>=1?e:r(t)}}}(n):n)))(+t)},s.domain=function(t){return arguments.length?(a=Et.call(t,fe),f()):a.slice()},s.range=function(t){return arguments.length?(o=Ft.call(t),f()):o.slice()},s.rangeRound=function(t){return o=Ft.call(t),u=Jn,f()},s.clamp=function(t){return arguments.length?(c=!!t,f()):c},s.interpolate=function(t){return arguments.length?(u=t,f()):u},f()}var be,ve=function(t,n){if((e=(t=n?t.toExponential(n-1):t.toExponential()).indexOf("e"))<0)return null;var e,r=t.slice(0,e);return[r.length>1?r[0]+r.slice(2):r,+t.slice(e+1)]},ye=function(t){return(t=ve(Math.abs(t)))?t[1]:NaN},me=function(t,n){var e=ve(t,n);if(!e)return t+"";var r=e[0],i=e[1];return i<0?"0."+new Array(-i).join("0")+r:r.length>i+1?r.slice(0,i+1)+"."+r.slice(i+1):r+new Array(i-r.length+2).join("0")},we={"":function(t,n){t=t.toPrecision(n);t:for(var e,r=t.length,i=1,a=-1;i<r;++i)switch(t[i]){case".":a=e=i;break;case"0":0===a&&(a=i),e=i;break;case"e":break t;default:a>0&&(a=0)}return a>0?t.slice(0,a)+t.slice(e+1):t},"%":function(t,n){return(100*t).toFixed(n)},b:function(t){return Math.round(t).toString(2)},c:function(t){return t+""},d:function(t){return Math.round(t).toString(10)},e:function(t,n){return t.toExponential(n)},f:function(t,n){return t.toFixed(n)},g:function(t,n){return t.toPrecision(n)},o:function(t){return Math.round(t).toString(8)},p:function(t,n){return me(100*t,n)},r:me,s:function(t,n){var e=ve(t,n);if(!e)return t+"";var r=e[0],i=e[1],a=i-(be=3*Math.max(-8,Math.min(8,Math.floor(i/3))))+1,o=r.length;return a===o?r:a>o?r+new Array(a-o+1).join("0"):a>0?r.slice(0,a)+"."+r.slice(a):"0."+new Array(1-a).join("0")+ve(t,Math.max(0,n+a-1))[0]},X:function(t){return Math.round(t).toString(16).toUpperCase()},x:function(t){return Math.round(t).toString(16)}},_e=/^(?:(.)?([<>=^]))?([+\-\( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?([a-z%])?$/i;function Me(t){return new xe(t)}function xe(t){if(!(n=_e.exec(t)))throw new Error("invalid format: "+t);var n,e=n[1]||" ",r=n[2]||">",i=n[3]||"-",a=n[4]||"",o=!!n[5],u=n[6]&&+n[6],c=!!n[7],f=n[8]&&+n[8].slice(1),s=n[9]||"";"n"===s?(c=!0,s="g"):we[s]||(s=""),(o||"0"===e&&"="===r)&&(o=!0,e="0",r="="),this.fill=e,this.align=r,this.sign=i,this.symbol=a,this.zero=o,this.width=u,this.comma=c,this.precision=f,this.type=s}Me.prototype=xe.prototype,xe.prototype.toString=function(){return this.fill+this.align+this.sign+this.symbol+(this.zero?"0":"")+(null==this.width?"":Math.max(1,0|this.width))+(this.comma?",":"")+(null==this.precision?"":"."+Math.max(0,0|this.precision))+this.type};var Ae,Te,Ce,Ne=function(t){return t},Se=["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"],ke=function(t){var n=t.grouping&&t.thousands?function(t,n){return function(e,r){for(var i=e.length,a=[],o=0,u=t[0],c=0;i>0&&u>0&&(c+u+1>r&&(u=Math.max(1,r-c)),a.push(e.substring(i-=u,i+u)),!((c+=u+1)>r));)u=t[o=(o+1)%t.length];return a.reverse().join(n)}}(t.grouping,t.thousands):Ne,e=t.currency,r=t.decimal,i=t.numerals?function(t){return function(n){return n.replace(/[0-9]/g,function(n){return t[+n]})}}(t.numerals):Ne,a=t.percent||"%";function o(t){var o=(t=Me(t)).fill,u=t.align,c=t.sign,f=t.symbol,s=t.zero,l=t.width,h=t.comma,d=t.precision,p=t.type,g="$"===f?e[0]:"#"===f&&/[boxX]/.test(p)?"0"+p.toLowerCase():"",b="$"===f?e[1]:/[%p]/.test(p)?a:"",v=we[p],y=!p||/[defgprs%]/.test(p);function m(t){var e,a,f,m=g,w=b;if("c"===p)w=v(t)+w,t="";else{var _=(t=+t)<0;if(t=v(Math.abs(t),d),_&&0==+t&&(_=!1),m=(_?"("===c?c:"-":"-"===c||"("===c?"":c)+m,w=("s"===p?Se[8+be/3]:"")+w+(_&&"("===c?")":""),y)for(e=-1,a=t.length;++e<a;)if(48>(f=t.charCodeAt(e))||f>57){w=(46===f?r+t.slice(e+1):t.slice(e))+w,t=t.slice(0,e);break}}h&&!s&&(t=n(t,1/0));var M=m.length+t.length+w.length,x=M<l?new Array(l-M+1).join(o):"";switch(h&&s&&(t=n(x+t,x.length?l-w.length:1/0),x=""),u){case"<":t=m+t+w+x;break;case"=":t=m+x+t+w;break;case"^":t=x.slice(0,M=x.length>>1)+m+t+w+x.slice(M);break;default:t=x+m+t+w}return i(t)}return d=null==d?p?6:12:/[gprs]/.test(p)?Math.max(1,Math.min(21,d)):Math.max(0,Math.min(20,d)),m.toString=function(){return t+""},m}return{format:o,formatPrefix:function(t,n){var e=o(((t=Me(t)).type="f",t)),r=3*Math.max(-8,Math.min(8,Math.floor(ye(n)/3))),i=Math.pow(10,-r),a=Se[8+r/3];return function(t){return e(i*t)+a}}}};!function(t){Ae=ke(t),Te=Ae.format,Ce=Ae.formatPrefix}({decimal:".",thousands:",",grouping:[3],currency:["$",""]});var Ue=function(t,n,e){var r,i=t[0],a=t[t.length-1],o=At(i,a,null==n?10:n);switch((e=Me(null==e?",f":e)).type){case"s":var u=Math.max(Math.abs(i),Math.abs(a));return null!=e.precision||isNaN(r=function(t,n){return Math.max(0,3*Math.max(-8,Math.min(8,Math.floor(ye(n)/3)))-ye(Math.abs(t)))}(o,u))||(e.precision=r),Ce(e,u);case"":case"e":case"g":case"p":case"r":null!=e.precision||isNaN(r=function(t,n){return t=Math.abs(t),n=Math.abs(n)-t,Math.max(0,ye(n)-ye(t))+1}(o,Math.max(Math.abs(i),Math.abs(a))))||(e.precision=r-("e"===e.type));break;case"f":case"%":null!=e.precision||isNaN(r=function(t){return Math.max(0,-ye(Math.abs(t)))}(o))||(e.precision=r-2*("%"===e.type))}return Te(e)};function De(t){var n=t.domain;return t.ticks=function(t){var e=n();return Mt(e[0],e[e.length-1],null==t?10:t)},t.tickFormat=function(t,e){return Ue(n(),t,e)},t.nice=function(e){null==e&&(e=10);var r,i=n(),a=0,o=i.length-1,u=i[a],c=i[o];return c<u&&(r=u,u=c,c=r,r=a,a=o,o=r),(r=xt(u,c,e))>0?r=xt(u=Math.floor(u/r)*r,c=Math.ceil(c/r)*r,e):r<0&&(r=xt(u=Math.ceil(u*r)/r,c=Math.floor(c*r)/r,e)),r>0?(i[a]=Math.floor(u/r)*r,i[o]=Math.ceil(c/r)*r,n(i)):r<0&&(i[a]=Math.ceil(u*r)/r,i[o]=Math.floor(c*r)/r,n(i)),t},t}var Ee=new Date,Fe=new Date;function Ye(t,n,e,r){function i(n){return t(n=new Date(+n)),n}return i.floor=i,i.ceil=function(e){return t(e=new Date(e-1)),n(e,1),t(e),e},i.round=function(t){var n=i(t),e=i.ceil(t);return t-n<e-t?n:e},i.offset=function(t,e){return n(t=new Date(+t),null==e?1:Math.floor(e)),t},i.range=function(e,r,a){var o,u=[];if(e=i.ceil(e),a=null==a?1:Math.floor(a),!(e<r&&a>0))return u;do{u.push(o=new Date(+e)),n(e,a),t(e)}while(o<e&&e<r);return u},i.filter=function(e){return Ye(function(n){if(n>=n)for(;t(n),!e(n);)n.setTime(n-1)},function(t,r){if(t>=t)if(r<0)for(;++r<=0;)for(;n(t,-1),!e(t););else for(;--r>=0;)for(;n(t,1),!e(t););})},e&&(i.count=function(n,r){return Ee.setTime(+n),Fe.setTime(+r),t(Ee),t(Fe),Math.floor(e(Ee,Fe))},i.every=function(t){return t=Math.floor(t),isFinite(t)&&t>0?t>1?i.filter(r?function(n){return r(n)%t==0}:function(n){return i.count(0,n)%t==0}):i:null}),i}var $e=Ye(function(){},function(t,n){t.setTime(+t+n)},function(t,n){return n-t});$e.every=function(t){return t=Math.floor(t),isFinite(t)&&t>0?t>1?Ye(function(n){n.setTime(Math.floor(n/t)*t)},function(n,e){n.setTime(+n+e*t)},function(n,e){return(e-n)/t}):$e:null};$e.range;var Pe=6e4,je=6048e5,He=Ye(function(t){t.setTime(1e3*Math.floor(t/1e3))},function(t,n){t.setTime(+t+1e3*n)},function(t,n){return(n-t)/1e3},function(t){return t.getUTCSeconds()}),Oe=(He.range,Ye(function(t){t.setTime(Math.floor(t/Pe)*Pe)},function(t,n){t.setTime(+t+n*Pe)},function(t,n){return(n-t)/Pe},function(t){return t.getMinutes()})),Le=(Oe.range,Ye(function(t){var n=t.getTimezoneOffset()*Pe%36e5;n<0&&(n+=36e5),t.setTime(36e5*Math.floor((+t-n)/36e5)+n)},function(t,n){t.setTime(+t+36e5*n)},function(t,n){return(n-t)/36e5},function(t){return t.getHours()})),qe=(Le.range,Ye(function(t){t.setHours(0,0,0,0)},function(t,n){t.setDate(t.getDate()+n)},function(t,n){return(n-t-(n.getTimezoneOffset()-t.getTimezoneOffset())*Pe)/864e5},function(t){return t.getDate()-1})),ze=qe;qe.range;function Xe(t){return Ye(function(n){n.setDate(n.getDate()-(n.getDay()+7-t)%7),n.setHours(0,0,0,0)},function(t,n){t.setDate(t.getDate()+7*n)},function(t,n){return(n-t-(n.getTimezoneOffset()-t.getTimezoneOffset())*Pe)/je})}var Ie=Xe(0),Re=Xe(1),Ve=Xe(2),Ze=Xe(3),Be=Xe(4),We=Xe(5),Qe=Xe(6),Je=(Ie.range,Re.range,Ve.range,Ze.range,Be.range,We.range,Qe.range,Ye(function(t){t.setDate(1),t.setHours(0,0,0,0)},function(t,n){t.setMonth(t.getMonth()+n)},function(t,n){return n.getMonth()-t.getMonth()+12*(n.getFullYear()-t.getFullYear())},function(t){return t.getMonth()})),Ge=(Je.range,Ye(function(t){t.setMonth(0,1),t.setHours(0,0,0,0)},function(t,n){t.setFullYear(t.getFullYear()+n)},function(t,n){return n.getFullYear()-t.getFullYear()},function(t){return t.getFullYear()}));Ge.every=function(t){return isFinite(t=Math.floor(t))&&t>0?Ye(function(n){n.setFullYear(Math.floor(n.getFullYear()/t)*t),n.setMonth(0,1),n.setHours(0,0,0,0)},function(n,e){n.setFullYear(n.getFullYear()+e*t)}):null};var Ke=Ge,tr=(Ge.range,Ye(function(t){t.setUTCSeconds(0,0)},function(t,n){t.setTime(+t+n*Pe)},function(t,n){return(n-t)/Pe},function(t){return t.getUTCMinutes()})),nr=(tr.range,Ye(function(t){t.setUTCMinutes(0,0,0)},function(t,n){t.setTime(+t+36e5*n)},function(t,n){return(n-t)/36e5},function(t){return t.getUTCHours()})),er=(nr.range,Ye(function(t){t.setUTCHours(0,0,0,0)},function(t,n){t.setUTCDate(t.getUTCDate()+n)},function(t,n){return(n-t)/864e5},function(t){return t.getUTCDate()-1})),rr=er;er.range;function ir(t){return Ye(function(n){n.setUTCDate(n.getUTCDate()-(n.getUTCDay()+7-t)%7),n.setUTCHours(0,0,0,0)},function(t,n){t.setUTCDate(t.getUTCDate()+7*n)},function(t,n){return(n-t)/je})}var ar=ir(0),or=ir(1),ur=ir(2),cr=ir(3),fr=ir(4),sr=ir(5),lr=ir(6),hr=(ar.range,or.range,ur.range,cr.range,fr.range,sr.range,lr.range,Ye(function(t){t.setUTCDate(1),t.setUTCHours(0,0,0,0)},function(t,n){t.setUTCMonth(t.getUTCMonth()+n)},function(t,n){return n.getUTCMonth()-t.getUTCMonth()+12*(n.getUTCFullYear()-t.getUTCFullYear())},function(t){return t.getUTCMonth()})),dr=(hr.range,Ye(function(t){t.setUTCMonth(0,1),t.setUTCHours(0,0,0,0)},function(t,n){t.setUTCFullYear(t.getUTCFullYear()+n)},function(t,n){return n.getUTCFullYear()-t.getUTCFullYear()},function(t){return t.getUTCFullYear()}));dr.every=function(t){return isFinite(t=Math.floor(t))&&t>0?Ye(function(n){n.setUTCFullYear(Math.floor(n.getUTCFullYear()/t)*t),n.setUTCMonth(0,1),n.setUTCHours(0,0,0,0)},function(n,e){n.setUTCFullYear(n.getUTCFullYear()+e*t)}):null};var pr=dr;dr.range;function gr(t){if(0<=t.y&&t.y<100){var n=new Date(-1,t.m,t.d,t.H,t.M,t.S,t.L);return n.setFullYear(t.y),n}return new Date(t.y,t.m,t.d,t.H,t.M,t.S,t.L)}function br(t){if(0<=t.y&&t.y<100){var n=new Date(Date.UTC(-1,t.m,t.d,t.H,t.M,t.S,t.L));return n.setUTCFullYear(t.y),n}return new Date(Date.UTC(t.y,t.m,t.d,t.H,t.M,t.S,t.L))}function vr(t){return{y:t,m:0,d:1,H:0,M:0,S:0,L:0}}var yr,mr,wr,_r={"-":"",_:" ",0:"0"},Mr=/^\s*\d+/,xr=/^%/,Ar=/[\\^$*+?|[\]().{}]/g;function Tr(t,n,e){var r=t<0?"-":"",i=(r?-t:t)+"",a=i.length;return r+(a<e?new Array(e-a+1).join(n)+i:i)}function Cr(t){return t.replace(Ar,"\\$&")}function Nr(t){return new RegExp("^(?:"+t.map(Cr).join("|")+")","i")}function Sr(t){for(var n={},e=-1,r=t.length;++e<r;)n[t[e].toLowerCase()]=e;return n}function kr(t,n,e){var r=Mr.exec(n.slice(e,e+1));return r?(t.w=+r[0],e+r[0].length):-1}function Ur(t,n,e){var r=Mr.exec(n.slice(e,e+1));return r?(t.u=+r[0],e+r[0].length):-1}function Dr(t,n,e){var r=Mr.exec(n.slice(e,e+2));return r?(t.U=+r[0],e+r[0].length):-1}function Er(t,n,e){var r=Mr.exec(n.slice(e,e+2));return r?(t.V=+r[0],e+r[0].length):-1}function Fr(t,n,e){var r=Mr.exec(n.slice(e,e+2));return r?(t.W=+r[0],e+r[0].length):-1}function Yr(t,n,e){var r=Mr.exec(n.slice(e,e+4));return r?(t.y=+r[0],e+r[0].length):-1}function $r(t,n,e){var r=Mr.exec(n.slice(e,e+2));return r?(t.y=+r[0]+(+r[0]>68?1900:2e3),e+r[0].length):-1}function Pr(t,n,e){var r=/^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(n.slice(e,e+6));return r?(t.Z=r[1]?0:-(r[2]+(r[3]||"00")),e+r[0].length):-1}function jr(t,n,e){var r=Mr.exec(n.slice(e,e+2));return r?(t.m=r[0]-1,e+r[0].length):-1}function Hr(t,n,e){var r=Mr.exec(n.slice(e,e+2));return r?(t.d=+r[0],e+r[0].length):-1}function Or(t,n,e){var r=Mr.exec(n.slice(e,e+3));return r?(t.m=0,t.d=+r[0],e+r[0].length):-1}function Lr(t,n,e){var r=Mr.exec(n.slice(e,e+2));return r?(t.H=+r[0],e+r[0].length):-1}function qr(t,n,e){var r=Mr.exec(n.slice(e,e+2));return r?(t.M=+r[0],e+r[0].length):-1}function zr(t,n,e){var r=Mr.exec(n.slice(e,e+2));return r?(t.S=+r[0],e+r[0].length):-1}function Xr(t,n,e){var r=Mr.exec(n.slice(e,e+3));return r?(t.L=+r[0],e+r[0].length):-1}function Ir(t,n,e){var r=Mr.exec(n.slice(e,e+6));return r?(t.L=Math.floor(r[0]/1e3),e+r[0].length):-1}function Rr(t,n,e){var r=xr.exec(n.slice(e,e+1));return r?e+r[0].length:-1}function Vr(t,n,e){var r=Mr.exec(n.slice(e));return r?(t.Q=+r[0],e+r[0].length):-1}function Zr(t,n,e){var r=Mr.exec(n.slice(e));return r?(t.Q=1e3*+r[0],e+r[0].length):-1}function Br(t,n){return Tr(t.getDate(),n,2)}function Wr(t,n){return Tr(t.getHours(),n,2)}function Qr(t,n){return Tr(t.getHours()%12||12,n,2)}function Jr(t,n){return Tr(1+ze.count(Ke(t),t),n,3)}function Gr(t,n){return Tr(t.getMilliseconds(),n,3)}function Kr(t,n){return Gr(t,n)+"000"}function ti(t,n){return Tr(t.getMonth()+1,n,2)}function ni(t,n){return Tr(t.getMinutes(),n,2)}function ei(t,n){return Tr(t.getSeconds(),n,2)}function ri(t){var n=t.getDay();return 0===n?7:n}function ii(t,n){return Tr(Ie.count(Ke(t),t),n,2)}function ai(t,n){var e=t.getDay();return t=e>=4||0===e?Be(t):Be.ceil(t),Tr(Be.count(Ke(t),t)+(4===Ke(t).getDay()),n,2)}function oi(t){return t.getDay()}function ui(t,n){return Tr(Re.count(Ke(t),t),n,2)}function ci(t,n){return Tr(t.getFullYear()%100,n,2)}function fi(t,n){return Tr(t.getFullYear()%1e4,n,4)}function si(t){var n=t.getTimezoneOffset();return(n>0?"-":(n*=-1,"+"))+Tr(n/60|0,"0",2)+Tr(n%60,"0",2)}function li(t,n){return Tr(t.getUTCDate(),n,2)}function hi(t,n){return Tr(t.getUTCHours(),n,2)}function di(t,n){return Tr(t.getUTCHours()%12||12,n,2)}function pi(t,n){return Tr(1+rr.count(pr(t),t),n,3)}function gi(t,n){return Tr(t.getUTCMilliseconds(),n,3)}function bi(t,n){return gi(t,n)+"000"}function vi(t,n){return Tr(t.getUTCMonth()+1,n,2)}function yi(t,n){return Tr(t.getUTCMinutes(),n,2)}function mi(t,n){return Tr(t.getUTCSeconds(),n,2)}function wi(t){var n=t.getUTCDay();return 0===n?7:n}function _i(t,n){return Tr(ar.count(pr(t),t),n,2)}function Mi(t,n){var e=t.getUTCDay();return t=e>=4||0===e?fr(t):fr.ceil(t),Tr(fr.count(pr(t),t)+(4===pr(t).getUTCDay()),n,2)}function xi(t){return t.getUTCDay()}function Ai(t,n){return Tr(or.count(pr(t),t),n,2)}function Ti(t,n){return Tr(t.getUTCFullYear()%100,n,2)}function Ci(t,n){return Tr(t.getUTCFullYear()%1e4,n,4)}function Ni(){return"+0000"}function Si(){return"%"}function ki(t){return+t}function Ui(t){return Math.floor(+t/1e3)}!function(t){yr=function(t){var n=t.dateTime,e=t.date,r=t.time,i=t.periods,a=t.days,o=t.shortDays,u=t.months,c=t.shortMonths,f=Nr(i),s=Sr(i),l=Nr(a),h=Sr(a),d=Nr(o),p=Sr(o),g=Nr(u),b=Sr(u),v=Nr(c),y=Sr(c),m={a:function(t){return o[t.getDay()]},A:function(t){return a[t.getDay()]},b:function(t){return c[t.getMonth()]},B:function(t){return u[t.getMonth()]},c:null,d:Br,e:Br,f:Kr,H:Wr,I:Qr,j:Jr,L:Gr,m:ti,M:ni,p:function(t){return i[+(t.getHours()>=12)]},Q:ki,s:Ui,S:ei,u:ri,U:ii,V:ai,w:oi,W:ui,x:null,X:null,y:ci,Y:fi,Z:si,"%":Si},w={a:function(t){return o[t.getUTCDay()]},A:function(t){return a[t.getUTCDay()]},b:function(t){return c[t.getUTCMonth()]},B:function(t){return u[t.getUTCMonth()]},c:null,d:li,e:li,f:bi,H:hi,I:di,j:pi,L:gi,m:vi,M:yi,p:function(t){return i[+(t.getUTCHours()>=12)]},Q:ki,s:Ui,S:mi,u:wi,U:_i,V:Mi,w:xi,W:Ai,x:null,X:null,y:Ti,Y:Ci,Z:Ni,"%":Si},_={a:function(t,n,e){var r=d.exec(n.slice(e));return r?(t.w=p[r[0].toLowerCase()],e+r[0].length):-1},A:function(t,n,e){var r=l.exec(n.slice(e));return r?(t.w=h[r[0].toLowerCase()],e+r[0].length):-1},b:function(t,n,e){var r=v.exec(n.slice(e));return r?(t.m=y[r[0].toLowerCase()],e+r[0].length):-1},B:function(t,n,e){var r=g.exec(n.slice(e));return r?(t.m=b[r[0].toLowerCase()],e+r[0].length):-1},c:function(t,e,r){return A(t,n,e,r)},d:Hr,e:Hr,f:Ir,H:Lr,I:Lr,j:Or,L:Xr,m:jr,M:qr,p:function(t,n,e){var r=f.exec(n.slice(e));return r?(t.p=s[r[0].toLowerCase()],e+r[0].length):-1},Q:Vr,s:Zr,S:zr,u:Ur,U:Dr,V:Er,w:kr,W:Fr,x:function(t,n,r){return A(t,e,n,r)},X:function(t,n,e){return A(t,r,n,e)},y:$r,Y:Yr,Z:Pr,"%":Rr};function M(t,n){return function(e){var r,i,a,o=[],u=-1,c=0,f=t.length;for(e instanceof Date||(e=new Date(+e));++u<f;)37===t.charCodeAt(u)&&(o.push(t.slice(c,u)),null!=(i=_r[r=t.charAt(++u)])?r=t.charAt(++u):i="e"===r?" ":"0",(a=n[r])&&(r=a(e,i)),o.push(r),c=u+1);return o.push(t.slice(c,u)),o.join("")}}function x(t,n){return function(e){var r,i,a=vr(1900);if(A(a,t,e+="",0)!=e.length)return null;if("Q"in a)return new Date(a.Q);if("p"in a&&(a.H=a.H%12+12*a.p),"V"in a){if(a.V<1||a.V>53)return null;"w"in a||(a.w=1),"Z"in a?(r=(i=(r=br(vr(a.y))).getUTCDay())>4||0===i?or.ceil(r):or(r),r=rr.offset(r,7*(a.V-1)),a.y=r.getUTCFullYear(),a.m=r.getUTCMonth(),a.d=r.getUTCDate()+(a.w+6)%7):(r=(i=(r=n(vr(a.y))).getDay())>4||0===i?Re.ceil(r):Re(r),r=ze.offset(r,7*(a.V-1)),a.y=r.getFullYear(),a.m=r.getMonth(),a.d=r.getDate()+(a.w+6)%7)}else("W"in a||"U"in a)&&("w"in a||(a.w="u"in a?a.u%7:"W"in a?1:0),i="Z"in a?br(vr(a.y)).getUTCDay():n(vr(a.y)).getDay(),a.m=0,a.d="W"in a?(a.w+6)%7+7*a.W-(i+5)%7:a.w+7*a.U-(i+6)%7);return"Z"in a?(a.H+=a.Z/100|0,a.M+=a.Z%100,br(a)):n(a)}}function A(t,n,e,r){for(var i,a,o=0,u=n.length,c=e.length;o<u;){if(r>=c)return-1;if(37===(i=n.charCodeAt(o++))){if(i=n.charAt(o++),!(a=_[i in _r?n.charAt(o++):i])||(r=a(t,e,r))<0)return-1}else if(i!=e.charCodeAt(r++))return-1}return r}return m.x=M(e,m),m.X=M(r,m),m.c=M(n,m),w.x=M(e,w),w.X=M(r,w),w.c=M(n,w),{format:function(t){var n=M(t+="",m);return n.toString=function(){return t},n},parse:function(t){var n=x(t+="",gr);return n.toString=function(){return t},n},utcFormat:function(t){var n=M(t+="",w);return n.toString=function(){return t},n},utcParse:function(t){var n=x(t,br);return n.toString=function(){return t},n}}}(t),yr.format,yr.parse,mr=yr.utcFormat,wr=yr.utcParse}({dateTime:"%x, %X",date:"%-m/%-d/%Y",time:"%-I:%M:%S %p",periods:["AM","PM"],days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],shortDays:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],shortMonths:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]});Date.prototype.toISOString||mr("%Y-%m-%dT%H:%M:%S.%LZ");+new Date("2000-01-01T00:00:00.000Z")||wr("%Y-%m-%dT%H:%M:%S.%LZ");var Di=function(t){return t.match(/.{6}/g).map(function(t){return"#"+t})};Di("1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf"),Di("393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6"),Di("3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9"),Di("1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5"),ue(En(300,.5,0),En(-240,.5,1)),ue(En(-100,.75,.35),En(80,1.5,.8)),ue(En(260,.75,.35),En(80,1.5,.8)),En();function Ei(t){var n=t.length;return function(e){return t[Math.max(0,Math.min(n-1,Math.floor(e*n)))]}}Ei(Di("44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725")),Ei(Di("00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf")),Ei(Di("00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4")),Ei(Di("0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921"));var Fi={value:function(){}};function Yi(){for(var t,n=0,e=arguments.length,r={};n<e;++n){if(!(t=arguments[n]+"")||t in r)throw new Error("illegal type: "+t);r[t]=[]}return new $i(r)}function $i(t){this._=t}function Pi(t,n){for(var e,r=0,i=t.length;r<i;++r)if((e=t[r]).name===n)return e.value}function ji(t,n,e){for(var r=0,i=t.length;r<i;++r)if(t[r].name===n){t[r]=Fi,t=t.slice(0,r).concat(t.slice(r+1));break}return null!=e&&t.push({name:n,value:e}),t}$i.prototype=Yi.prototype={constructor:$i,on:function(t,n){var e,r=this._,i=function(t,n){return t.trim().split(/^|\s+/).map(function(t){var e="",r=t.indexOf(".");if(r>=0&&(e=t.slice(r+1),t=t.slice(0,r)),t&&!n.hasOwnProperty(t))throw new Error("unknown type: "+t);return{type:t,name:e}})}(t+"",r),a=-1,o=i.length;if(!(arguments.length<2)){if(null!=n&&"function"!=typeof n)throw new Error("invalid callback: "+n);for(;++a<o;)if(e=(t=i[a]).type)r[e]=ji(r[e],t.name,n);else if(null==n)for(e in r)r[e]=ji(r[e],t.name,null);return this}for(;++a<o;)if((e=(t=i[a]).type)&&(e=Pi(r[e],t.name)))return e},copy:function(){var t={},n=this._;for(var e in n)t[e]=n[e].slice();return new $i(t)},call:function(t,n){if((e=arguments.length-2)>0)for(var e,r,i=new Array(e),a=0;a<e;++a)i[a]=arguments[a+2];if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(a=0,e=(r=this._[t]).length;a<e;++a)r[a].value.apply(n,i)},apply:function(t,n,e){if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(var r=this._[t],i=0,a=r.length;i<a;++i)r[i].value.apply(n,e)}};var Hi,Oi,Li=Yi,qi=0,zi=0,Xi=0,Ii=1e3,Ri=0,Vi=0,Zi=0,Bi="object"==typeof performance&&performance.now?performance:Date,Wi="object"==typeof window&&window.requestAnimationFrame?window.requestAnimationFrame.bind(window):function(t){setTimeout(t,17)};function Qi(){return Vi||(Wi(Ji),Vi=Bi.now()+Zi)}function Ji(){Vi=0}function Gi(){this._call=this._time=this._next=null}function Ki(t,n,e){var r=new Gi;return r.restart(t,n,e),r}function ta(){Vi=(Ri=Bi.now())+Zi,qi=zi=0;try{!function(){Qi(),++qi;for(var t,n=Hi;n;)(t=Vi-n._time)>=0&&n._call.call(null,t),n=n._next;--qi}()}finally{qi=0,function(){var t,n,e=Hi,r=1/0;for(;e;)e._call?(r>e._time&&(r=e._time),t=e,e=e._next):(n=e._next,e._next=null,e=t?t._next=n:Hi=n);Oi=t,ea(r)}(),Vi=0}}function na(){var t=Bi.now(),n=t-Ri;n>Ii&&(Zi-=n,Ri=t)}function ea(t){qi||(zi&&(zi=clearTimeout(zi)),t-Vi>24?(t<1/0&&(zi=setTimeout(ta,t-Bi.now()-Zi)),Xi&&(Xi=clearInterval(Xi))):(Xi||(Ri=Bi.now(),Xi=setInterval(na,Ii)),qi=1,Wi(ta)))}Gi.prototype=Ki.prototype={constructor:Gi,restart:function(t,n,e){if("function"!=typeof t)throw new TypeError("callback is not a function");e=(null==e?Qi():+e)+(null==n?0:+n),this._next||Oi===this||(Oi?Oi._next=this:Hi=this,Oi=this),this._call=t,this._time=e,ea()},stop:function(){this._call&&(this._call=null,this._time=1/0,ea())}};var ra=function(t,n,e){var r=new Gi;return n=null==n?0:+n,r.restart(function(e){r.stop(),t(e+n)},n,e),r},ia=Li("start","end","interrupt"),aa=[],oa=0,ua=1,ca=2,fa=3,sa=4,la=5,ha=6,da=function(t,n,e,r,i,a){var o=t.__transition;if(o){if(e in o)return}else t.__transition={};!function(t,n,e){var r,i=t.__transition;function a(c){var f,s,l,h;if(e.state!==ua)return u();for(f in i)if((h=i[f]).name===e.name){if(h.state===fa)return ra(a);h.state===sa?(h.state=ha,h.timer.stop(),h.on.call("interrupt",t,t.__data__,h.index,h.group),delete i[f]):+f<n&&(h.state=ha,h.timer.stop(),delete i[f])}if(ra(function(){e.state===fa&&(e.state=sa,e.timer.restart(o,e.delay,e.time),o(c))}),e.state=ca,e.on.call("start",t,t.__data__,e.index,e.group),e.state===ca){for(e.state=fa,r=new Array(l=e.tween.length),f=0,s=-1;f<l;++f)(h=e.tween[f].value.call(t,t.__data__,e.index,e.group))&&(r[++s]=h);r.length=s+1}}function o(n){for(var i=n<e.duration?e.ease.call(null,n/e.duration):(e.timer.restart(u),e.state=la,1),a=-1,o=r.length;++a<o;)r[a].call(null,i);e.state===la&&(e.on.call("end",t,t.__data__,e.index,e.group),u())}function u(){for(var r in e.state=ha,e.timer.stop(),delete i[n],i)return;delete t.__transition}i[n]=e,e.timer=Ki(function(t){e.state=ua,e.timer.restart(a,e.delay,e.time),e.delay<=t&&a(t-e.delay)},0,e.time)}(t,e,{name:n,index:r,group:i,on:ia,tween:aa,time:a.time,delay:a.delay,duration:a.duration,ease:a.ease,timer:null,state:oa})};function pa(t,n){var e=ba(t,n);if(e.state>oa)throw new Error("too late; already scheduled");return e}function ga(t,n){var e=ba(t,n);if(e.state>ca)throw new Error("too late; already started");return e}function ba(t,n){var e=t.__transition;if(!e||!(e=e[n]))throw new Error("transition not found");return e}function va(t,n,e){var r=t._id;return t.each(function(){var t=ga(this,r);(t.value||(t.value={}))[n]=e.apply(this,arguments)}),function(t){return ba(t,r).value[n]}}var ya=function(t,n){var e;return("number"==typeof n?zn:n instanceof Wt?Ln:(e=Wt(n))?(n=e,Ln):Wn)(t,n)};var ma=ct.prototype.constructor;var wa=0;function _a(t,n,e,r){this._groups=t,this._parents=n,this._name=e,this._id=r}function Ma(t){return ct().transition(t)}function xa(){return++wa}var Aa=ct.prototype;_a.prototype=Ma.prototype={constructor:_a,select:function(t){var n=this._name,e=this._id;"function"!=typeof t&&(t=A(t));for(var r=this._groups,i=r.length,a=new Array(i),o=0;o<i;++o)for(var u,c,f=r[o],s=f.length,l=a[o]=new Array(s),h=0;h<s;++h)(u=f[h])&&(c=t.call(u,u.__data__,h,f))&&("__data__"in u&&(c.__data__=u.__data__),l[h]=c,da(l[h],n,e,h,l,ba(u,e)));return new _a(a,this._parents,n,e)},selectAll:function(t){var n=this._name,e=this._id;"function"!=typeof t&&(t=C(t));for(var r=this._groups,i=r.length,a=[],o=[],u=0;u<i;++u)for(var c,f=r[u],s=f.length,l=0;l<s;++l)if(c=f[l]){for(var h,d=t.call(c,c.__data__,l,f),p=ba(c,e),g=0,b=d.length;g<b;++g)(h=d[g])&&da(h,n,e,g,d,p);a.push(d),o.push(c)}return new _a(a,o,n,e)},filter:function(t){"function"!=typeof t&&(t=U(t));for(var n=this._groups,e=n.length,r=new Array(e),i=0;i<e;++i)for(var a,o=n[i],u=o.length,c=r[i]=[],f=0;f<u;++f)(a=o[f])&&t.call(a,a.__data__,f,o)&&c.push(a);return new _a(r,this._parents,this._name,this._id)},merge:function(t){if(t._id!==this._id)throw new Error;for(var n=this._groups,e=t._groups,r=n.length,i=e.length,a=Math.min(r,i),o=new Array(r),u=0;u<a;++u)for(var c,f=n[u],s=e[u],l=f.length,h=o[u]=new Array(l),d=0;d<l;++d)(c=f[d]||s[d])&&(h[d]=c);for(;u<r;++u)o[u]=n[u];return new _a(o,this._parents,this._name,this._id)},selection:function(){return new ma(this._groups,this._parents)},transition:function(){for(var t=this._name,n=this._id,e=xa(),r=this._groups,i=r.length,a=0;a<i;++a)for(var o,u=r[a],c=u.length,f=0;f<c;++f)if(o=u[f]){var s=ba(o,n);da(o,t,e,f,u,{time:s.time+s.delay+s.duration,delay:0,duration:s.duration,ease:s.ease})}return new _a(r,this._parents,t,e)},call:Aa.call,nodes:Aa.nodes,node:Aa.node,size:Aa.size,empty:Aa.empty,each:Aa.each,on:function(t,n){var e=this._id;return arguments.length<2?ba(this.node(),e).on.on(t):this.each(function(t,n,e){var r,i,a=function(t){return(t+"").trim().split(/^|\s+/).every(function(t){var n=t.indexOf(".");return n>=0&&(t=t.slice(0,n)),!t||"start"===t})}(n)?pa:ga;return function(){var o=a(this,t),u=o.on;u!==r&&(i=(r=u).copy()).on(n,e),o.on=i}}(e,t,n))},attr:function(t,n){var e=_(t),r="transform"===e?re:ya;return this.attrTween(t,"function"==typeof n?(e.local?function(t,n,e){var r,i,a;return function(){var o,u=e(this);if(null!=u)return(o=this.getAttributeNS(t.space,t.local))===u?null:o===r&&u===i?a:a=n(r=o,i=u);this.removeAttributeNS(t.space,t.local)}}:function(t,n,e){var r,i,a;return function(){var o,u=e(this);if(null!=u)return(o=this.getAttribute(t))===u?null:o===r&&u===i?a:a=n(r=o,i=u);this.removeAttribute(t)}})(e,r,va(this,"attr."+t,n)):null==n?(e.local?function(t){return function(){this.removeAttributeNS(t.space,t.local)}}:function(t){return function(){this.removeAttribute(t)}})(e):(e.local?function(t,n,e){var r,i;return function(){var a=this.getAttributeNS(t.space,t.local);return a===e?null:a===r?i:i=n(r=a,e)}}:function(t,n,e){var r,i;return function(){var a=this.getAttribute(t);return a===e?null:a===r?i:i=n(r=a,e)}})(e,r,n+""))},attrTween:function(t,n){var e="attr."+t;if(arguments.length<2)return(e=this.tween(e))&&e._value;if(null==n)return this.tween(e,null);if("function"!=typeof n)throw new Error;var r=_(t);return this.tween(e,(r.local?function(t,n){function e(){var e=this,r=n.apply(e,arguments);return r&&function(n){e.setAttributeNS(t.space,t.local,r(n))}}return e._value=n,e}:function(t,n){function e(){var e=this,r=n.apply(e,arguments);return r&&function(n){e.setAttribute(t,r(n))}}return e._value=n,e})(r,n))},style:function(t,n,e){var r="transform"==(t+="")?ee:ya;return null==n?this.styleTween(t,function(t,n){var e,r,i;return function(){var a=H(this,t),o=(this.style.removeProperty(t),H(this,t));return a===o?null:a===e&&o===r?i:i=n(e=a,r=o)}}(t,r)).on("end.style."+t,function(t){return function(){this.style.removeProperty(t)}}(t)):this.styleTween(t,"function"==typeof n?function(t,n,e){var r,i,a;return function(){var o=H(this,t),u=e(this);return null==u&&(this.style.removeProperty(t),u=H(this,t)),o===u?null:o===r&&u===i?a:a=n(r=o,i=u)}}(t,r,va(this,"style."+t,n)):function(t,n,e){var r,i;return function(){var a=H(this,t);return a===e?null:a===r?i:i=n(r=a,e)}}(t,r,n+""),e)},styleTween:function(t,n,e){var r="style."+(t+="");if(arguments.length<2)return(r=this.tween(r))&&r._value;if(null==n)return this.tween(r,null);if("function"!=typeof n)throw new Error;return this.tween(r,function(t,n,e){function r(){var r=this,i=n.apply(r,arguments);return i&&function(n){r.style.setProperty(t,i(n),e)}}return r._value=n,r}(t,n,null==e?"":e))},text:function(t){return this.tween("text","function"==typeof t?function(t){return function(){var n=t(this);this.textContent=null==n?"":n}}(va(this,"text",t)):function(t){return function(){this.textContent=t}}(null==t?"":t+""))},remove:function(){return this.on("end.remove",function(t){return function(){var n=this.parentNode;for(var e in this.__transition)if(+e!==t)return;n&&n.removeChild(this)}}(this._id))},tween:function(t,n){var e=this._id;if(t+="",arguments.length<2){for(var r,i=ba(this.node(),e).tween,a=0,o=i.length;a<o;++a)if((r=i[a]).name===t)return r.value;return null}return this.each((null==n?function(t,n){var e,r;return function(){var i=ga(this,t),a=i.tween;if(a!==e)for(var o=0,u=(r=e=a).length;o<u;++o)if(r[o].name===n){(r=r.slice()).splice(o,1);break}i.tween=r}}:function(t,n,e){var r,i;if("function"!=typeof e)throw new Error;return function(){var a=ga(this,t),o=a.tween;if(o!==r){i=(r=o).slice();for(var u={name:n,value:e},c=0,f=i.length;c<f;++c)if(i[c].name===n){i[c]=u;break}c===f&&i.push(u)}a.tween=i}})(e,t,n))},delay:function(t){var n=this._id;return arguments.length?this.each(("function"==typeof t?function(t,n){return function(){pa(this,t).delay=+n.apply(this,arguments)}}:function(t,n){return n=+n,function(){pa(this,t).delay=n}})(n,t)):ba(this.node(),n).delay},duration:function(t){var n=this._id;return arguments.length?this.each(("function"==typeof t?function(t,n){return function(){ga(this,t).duration=+n.apply(this,arguments)}}:function(t,n){return n=+n,function(){ga(this,t).duration=n}})(n,t)):ba(this.node(),n).duration},ease:function(t){var n=this._id;return arguments.length?this.each(function(t,n){if("function"!=typeof n)throw new Error;return function(){ga(this,t).ease=n}}(n,t)):ba(this.node(),n).ease}};(function t(n){function e(t){return Math.pow(t,n)}return n=+n,e.exponent=t,e})(3),function t(n){function e(t){return 1-Math.pow(1-t,n)}return n=+n,e.exponent=t,e}(3),function t(n){function e(t){return((t*=2)<=1?Math.pow(t,n):2-Math.pow(2-t,n))/2}return n=+n,e.exponent=t,e}(3),Math.PI;(function t(n){function e(t){return t*t*((n+1)*t-n)}return n=+n,e.overshoot=t,e})(1.70158),function t(n){function e(t){return--t*t*((n+1)*t+n)+1}return n=+n,e.overshoot=t,e}(1.70158),function t(n){function e(t){return((t*=2)<1?t*t*((n+1)*t-n):(t-=2)*t*((n+1)*t+n)+2)/2}return n=+n,e.overshoot=t,e}(1.70158);var Ta=2*Math.PI,Ca=(function t(n,e){var r=Math.asin(1/(n=Math.max(1,n)))*(e/=Ta);function i(t){return n*Math.pow(2,10*--t)*Math.sin((r-t)/e)}return i.amplitude=function(n){return t(n,e*Ta)},i.period=function(e){return t(n,e)},i}(1,.3),function t(n,e){var r=Math.asin(1/(n=Math.max(1,n)))*(e/=Ta);function i(t){return 1-n*Math.pow(2,-10*(t=+t))*Math.sin((t+r)/e)}return i.amplitude=function(n){return t(n,e*Ta)},i.period=function(e){return t(n,e)},i}(1,.3),function t(n,e){var r=Math.asin(1/(n=Math.max(1,n)))*(e/=Ta);function i(t){return((t=2*t-1)<0?n*Math.pow(2,10*t)*Math.sin((r-t)/e):2-n*Math.pow(2,-10*t)*Math.sin((r+t)/e))/2}return i.amplitude=function(n){return t(n,e*Ta)},i.period=function(e){return t(n,e)},i}(1,.3),{time:null,delay:0,duration:250,ease:function(t){return((t*=2)<=1?t*t*t:(t-=2)*t*t+2)/2}});function Na(t,n){for(var e;!(e=t.__transition)||!(e=e[n]);)if(!(t=t.parentNode))return Ca.time=Qi(),Ca;return e}ct.prototype.interrupt=function(t){return this.each(function(){!function(t,n){var e,r,i,a=t.__transition,o=!0;if(a){for(i in n=null==n?null:n+"",a)(e=a[i]).name===n?(r=e.state>ca&&e.state<la,e.state=ha,e.timer.stop(),r&&e.on.call("interrupt",t,t.__data__,e.index,e.group),delete a[i]):o=!1;o&&delete t.__transition}}(this,t)})},ct.prototype.transition=function(t){var n,e;t instanceof _a?(n=t._id,t=t._name):(n=xa(),(e=Ca).time=Qi(),t=null==t?null:t+"");for(var r=this._groups,i=r.length,a=0;a<i;++a)for(var o,u=r[a],c=u.length,f=0;f<c;++f)(o=u[f])&&da(o,t,n,f,u,e||Na(o,n));return new _a(r,this._parents,t,n)};function Sa(t,n){ft(`#minutes-bg-${Ua(t.time_net)}`).attr("opacity",0),ft(`#${this.id}  .shape`).attr("stroke","none"),ft("#tooltip").style("display","none")}function ka(t){const n=t.split(":");let e=60*+n[0]*60+60*+n[1]+ +n[2];return isNaN(e)&&(e=0),e}function Ua(t){const n=t.split(":");let e=60*+n[0]+ +n[1];return isNaN(e)&&(e=0),e}ct.prototype.attrs=function(t){return("function"==typeof t?function(t,n){return t.each(function(){var t=n.apply(this,arguments),e=ft(this);for(var r in t)e.attr(r,t[r])})}:function(t,n){for(var e in n)t.attr(e,n[e]);return t})(this,t)},ct.prototype.styles=function(t,n){return("function"==typeof t?function(t,n,e){return t.each(function(){var t=n.apply(this,arguments),r=ft(this);for(var i in t)r.style(i,t[i],e)})}:function(t,n,e){for(var r in n)t.style(r,n[r],e);return t})(this,t,null==n?"":n)},ct.prototype.properties=function(t){return("function"==typeof t?function(t,n){return t.each(function(){var t=n.apply(this,arguments),e=ft(this);for(var r in t)e.property(r,t[r])})}:function(t,n){for(var e in n)t.property(e,n[e]);return t})(this,t)},Ma.prototype.attrs=function(t){return("function"==typeof t?function(t,n){return t.each(function(){var e=n.apply(this,arguments),r=ft(this).transition(t);for(var i in e)r.attr(i,e[i])})}:function(t,n){for(var e in n)t.attr(e,n[e]);return t})(this,t)},Ma.prototype.styles=function(t,n){return("function"==typeof t?function(t,n,e){return t.each(function(){var r=n.apply(this,arguments),i=ft(this).transition(t);for(var a in r)i.style(a,r[a],e)})}:function(t,n,e){for(var r in n)t.style(r,n[r],e);return t})(this,t,null==n?"":n)},v("/dist/stjude_marathon_data.csv").then(function(t){!function(t){const n=Ua(t[0].time_net),e=Ua(t[t.length-1].time_net),r=+(n/60).toFixed(2),i=Math.round(e/60),a=yt(153,470,15),o=[],u={top:60,right:10,bottom:20,left:100},c=960-u.left-u.right,f=60*(i-r)*(Ya+Ea)-u.top-u.bottom;Pa.attrs({height:c+u.left+u.right,width:f+u.top+u.bottom});const s=function t(){var n=ge(le,zn);return n.copy=function(){return pe(n,t())},De(n)}().domain([60*r,60*i]).range([0,f]),l=Pa.append("g").attrs({id:"container-main",transform:"translate(100, 850) rotate(270)"}),h=Pa.append("g").attrs({id:"container-scale",transform:"translate(100, 950) rotate(270)"});let d=0,p=[1,1],g=[];for(let t=0;t<470;t++)g.push(0);a.forEach(t=>o.push({mins:t,runners_below:0}));let b=0,v=o[1].mins,y=0;t.forEach(t=>{d="M"===t.sex?0:1,p[d]=t.position_gender,t.gender=1===d?"f":"m"}),t.sort((t,n)=>ka(t.time_net)-ka(n.time_net)),t.forEach(t=>{let n=Ua(t.time_net);t.per_minute=g[n],g[n]+=1,n>v&&(o[y].runners_below=b,v=o[y+=1].mins),b+=1}),t.sort((t,n)=>t.position_overall-n.position_overall),o[o.length-1].runners_below=t.length,function(t,n,e,r,i){n.selectAll("rect.minutes-bg").data(i).enter().append("rect").attrs({class:"minutes-bg",id:(t,n)=>`minutes-bg-${n}`,width:t=>(Ea+Fa)*t,height:Ea+1,opacity:0,x:-Ea/2-Fa/2,y:(t,n)=>e(n)+.5});let a=n.selectAll("g").data(t,t=>t.position_overall).enter().append("g").attrs({class:"runner",id:t=>`runner-${t.position_overall}`,transform:t=>`translate(${function(t,n,e,r){return t.per_minute*(e+r)}(t,0,Ea,Fa)}, ${function(t,n){return n(Ua(t.time_net))}(t,e)})`}).on("mouseover",ja).on("mouseout",Sa);a.selectAll("rect.bg-under").data(t=>[t]).enter().append("rect").attrs({width:Ea+Fa,height:Ea+Ya,x:-Ea/2-Fa/2,y:Fa/2,opacity:0,fill:"#FFF"});let o=a.selectAll("circle.shape").data(t=>[t]).enter().append("circle").attrs({r:Ea/2,cx:0,cy:Ea/2+Fa/2,opacity:1,fill:"#CCC",class:"shape"});ft(`#toggle-${r}`).classed("selected",!0),function(t){t.transition().delay(0).duration(Da).attr("fill",t=>"m"===t.gender?"#66A9BA":"#F7941D")}(o)}(t,l,s,$a,g),function(t,n,e,r,i){t.append("text").attrs({x:e.left-15,y:-18,"text-anchor":"end","font-size":"12px","font-weight":"bold"}).text("Net finish time");let a=t.selectAll("g.tick").data([{mins:r,runners_below:0}].concat(i),function(t){return t.mins}).enter().append("g").attrs({class:"trick",opacity:0,transform:t=>"translate(0,"+n(t.mins)+")"});a.selectAll("line").data(t=>[t]).enter().append("line").attrs({x1:e.left-20,y1:0,x2:e.left-10,y2:0,stroke:"#000"}),a.selectAll("text.hours").data(t=>[t]).enter().append("text").attrs({"text-anchor":"end",x:e.left-25,y:4,class:"hours","font-size":"11px"}).text(t=>`${Math.floor(t.mins/60)} hours`),a.selectAll("text.minutes").data(t=>[t]).enter().append("text").attrs({"text-anchor":"end",x:e.left-25,y:18,class:"minutes","font-size":"11px"}).text(t=>{let n=t.mins%60;return 0===n?"":n+" minutes"}),a.transition().duration(Da).attrs({opacity:1,transform:t=>`translate(0, ${n(t.mins)})`}),a.exit().remove()}(h,s,u,n,o)}(t)});const Da=1e3,Ea=8,Fa=2,Ya=2,$a="gender";let Pa=ft("#g").append("svg");function ja(t){const n=`<h3 style="color:${"m"===t.gender?"#66A9BA":"#F7941D"}"> ${t.name} </h3><p>Position: <strong>${t.position_overall}</strong></p><p>Finishing time: <strong>${t.time_net}</strong></p>`;ft("#legend").html(n)}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,